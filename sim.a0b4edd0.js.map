{"mappings":"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","sources":["<anon>","src/mainShader.js","node_modules/stats.js/build/stats.min.js","node_modules/lil-gui/dist/lil-gui.esm.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire9bdd\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire9bdd\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n/////////////\n///// Although multiple rendertargets do not work, this should allow you to see the general set-up \n///// for shaders through rendertargets with single outputs. Currently only the visualization shader, \n///// the invert shader, and the multiply shader work. \n///// The tests for multiple rendertargets are not included within this file since we reverted an\n///// earlier version where we were testing with single rendertargets.\n/////////////\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nvar $8d6448069697305c$exports = {};\n// stats.js - http://github.com/mrdoob/stats.js\n(function(f, e) {\n    $8d6448069697305c$exports = e();\n})($8d6448069697305c$exports, function() {\n    var f = function() {\n        function e(a) {\n            c.appendChild(a.dom);\n            return a;\n        }\n        function u(a) {\n            for(var d = 0; d < c.children.length; d++)c.children[d].style.display = d === a ? \"block\" : \"none\";\n            l = a;\n        }\n        var l = 0, c = document.createElement(\"div\");\n        c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n        c.addEventListener(\"click\", function(a) {\n            a.preventDefault();\n            u(++l % c.children.length);\n        }, !1);\n        var k = (performance || Date).now(), g = k, a = 0, r = e(new f.Panel(\"FPS\", \"#0ff\", \"#002\")), h = e(new f.Panel(\"MS\", \"#0f0\", \"#020\"));\n        if (self.performance && self.performance.memory) var t = e(new f.Panel(\"MB\", \"#f08\", \"#201\"));\n        u(0);\n        return {\n            REVISION: 16,\n            dom: c,\n            addPanel: e,\n            showPanel: u,\n            begin: function() {\n                k = (performance || Date).now();\n            },\n            end: function() {\n                a++;\n                var c = (performance || Date).now();\n                h.update(c - k, 200);\n                if (c > g + 1E3 && (r.update(1E3 * a / (c - g), 100), g = c, a = 0, t)) {\n                    var d = performance.memory;\n                    t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                }\n                return c;\n            },\n            update: function() {\n                k = this.end();\n            },\n            domElement: c,\n            setMode: u\n        };\n    };\n    f.Panel = function(e, f, l) {\n        var c = Infinity, k = 0, g = Math.round, a = g(window.devicePixelRatio || 1), r = 80 * a, h = 48 * a, t = 3 * a, v = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n        q.width = r;\n        q.height = h;\n        q.style.cssText = \"width:80px;height:48px\";\n        var b = q.getContext(\"2d\");\n        b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n        b.textBaseline = \"top\";\n        b.fillStyle = l;\n        b.fillRect(0, 0, r, h);\n        b.fillStyle = f;\n        b.fillText(e, t, v);\n        b.fillRect(d, m, n, p);\n        b.fillStyle = l;\n        b.globalAlpha = .9;\n        b.fillRect(d, m, n, p);\n        return {\n            dom: q,\n            update: function(h, w) {\n                c = Math.min(c, h);\n                k = Math.max(k, h);\n                b.fillStyle = l;\n                b.globalAlpha = 1;\n                b.fillRect(0, 0, r, m);\n                b.fillStyle = f;\n                b.fillText(g(h) + \" \" + e + \" (\" + g(c) + \"-\" + g(k) + \")\", t, v);\n                b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                b.fillRect(d + n - a, m, a, p);\n                b.fillStyle = l;\n                b.globalAlpha = .9;\n                b.fillRect(d + n - a, m, a, g((1 - h / w) * p));\n            }\n        };\n    };\n    return f;\n});\n\n\n/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.20.0\n * @author George Michael Brower\n * @license MIT\n */ /**\n * Base class for all controllers.\n */ class $6e44765c12ddb126$export$bd0bf19f25da8474 {\n    constructor(parent, object, property, className, elementType = \"div\"){\n        /**\n\t\t * The GUI that contains this controller.\n\t\t * @type {GUI}\n\t\t */ this.parent = parent;\n        /**\n\t\t * The object this controller will modify.\n\t\t * @type {object}\n\t\t */ this.object = object;\n        /**\n\t\t * The name of the property to control.\n\t\t * @type {string}\n\t\t */ this.property = property;\n        /**\n\t\t * Used to determine if the controller is disabled.\n\t\t * Use `controller.disable( true|false )` to modify this value.\n\t\t * @type {boolean}\n\t\t */ this._disabled = false;\n        /**\n\t\t * Used to determine if the Controller is hidden.\n\t\t * Use `controller.show()` or `controller.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */ this._hidden = false;\n        /**\n\t\t * The value of `object[ property ]` when the controller was created.\n\t\t * @type {any}\n\t\t */ this.initialValue = this.getValue();\n        /**\n\t\t * The outermost container DOM element for this controller.\n\t\t * @type {HTMLElement}\n\t\t */ this.domElement = document.createElement(elementType);\n        this.domElement.classList.add(\"controller\");\n        this.domElement.classList.add(className);\n        /**\n\t\t * The DOM element that contains the controller's name.\n\t\t * @type {HTMLElement}\n\t\t */ this.$name = document.createElement(\"div\");\n        this.$name.classList.add(\"name\");\n        $6e44765c12ddb126$export$bd0bf19f25da8474.nextNameID = $6e44765c12ddb126$export$bd0bf19f25da8474.nextNameID || 0;\n        this.$name.id = `lil-gui-name-${++$6e44765c12ddb126$export$bd0bf19f25da8474.nextNameID}`;\n        /**\n\t\t * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n\t\t * @type {HTMLElement}\n\t\t */ this.$widget = document.createElement(\"div\");\n        this.$widget.classList.add(\"widget\");\n        /**\n\t\t * The DOM element that receives the disabled attribute when using disable().\n\t\t * @type {HTMLElement}\n\t\t */ this.$disable = this.$widget;\n        this.domElement.appendChild(this.$name);\n        this.domElement.appendChild(this.$widget);\n        // Don't fire global key events while typing in a controller\n        this.domElement.addEventListener(\"keydown\", (e)=>e.stopPropagation());\n        this.domElement.addEventListener(\"keyup\", (e)=>e.stopPropagation());\n        this.parent.children.push(this);\n        this.parent.controllers.push(this);\n        this.parent.$children.appendChild(this.domElement);\n        this._listenCallback = this._listenCallback.bind(this);\n        this.name(property);\n    }\n    /**\n\t * Sets the name of the controller and its label in the GUI.\n\t * @param {string} name\n\t * @returns {this}\n\t */ name(name) {\n        /**\n\t\t * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n\t\t * @type {string}\n\t\t */ this._name = name;\n        this.$name.textContent = name;\n        return this;\n    }\n    /**\n\t * Pass a function to be called whenever the value is modified by this controller.\n\t * The function receives the new value as its first parameter. The value of `this` will be the\n\t * controller.\n\t *\n\t * For function controllers, the `onChange` callback will be fired on click, after the function\n\t * executes.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onChange( function( v ) {\n\t * \tconsole.log( 'The value is now ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */ onChange(callback) {\n        /**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value directly.\n\t\t * Use the `controller.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */ this._onChange = callback;\n        return this;\n    }\n    /**\n\t * Calls the onChange methods of this controller and its parent GUI.\n\t * @protected\n\t */ _callOnChange() {\n        this.parent._callOnChange(this);\n        if (this._onChange !== undefined) this._onChange.call(this, this.getValue());\n        this._changed = true;\n    }\n    /**\n\t * Pass a function to be called after this controller has been modified and loses focus.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onFinishChange( function( v ) {\n\t * \tconsole.log( 'Changes complete: ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */ onFinishChange(callback) {\n        /**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `controller.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */ this._onFinishChange = callback;\n        return this;\n    }\n    /**\n\t * Should be called by Controller when its widgets lose focus.\n\t * @protected\n\t */ _callOnFinishChange() {\n        if (this._changed) {\n            this.parent._callOnFinishChange(this);\n            if (this._onFinishChange !== undefined) this._onFinishChange.call(this, this.getValue());\n        }\n        this._changed = false;\n    }\n    /**\n\t * Sets the controller back to its initial value.\n\t * @returns {this}\n\t */ reset() {\n        this.setValue(this.initialValue);\n        this._callOnFinishChange();\n        return this;\n    }\n    /**\n\t * Enables this controller.\n\t * @param {boolean} enabled\n\t * @returns {this}\n\t * @example\n\t * controller.enable();\n\t * controller.enable( false ); // disable\n\t * controller.enable( controller._disabled ); // toggle\n\t */ enable(enabled = true) {\n        return this.disable(!enabled);\n    }\n    /**\n\t * Disables this controller.\n\t * @param {boolean} disabled\n\t * @returns {this}\n\t * @example\n\t * controller.disable();\n\t * controller.disable( false ); // enable\n\t * controller.disable( !controller._disabled ); // toggle\n\t */ disable(disabled = true) {\n        if (disabled === this._disabled) return this;\n        this._disabled = disabled;\n        this.domElement.classList.toggle(\"disabled\", disabled);\n        this.$disable.toggleAttribute(\"disabled\", disabled);\n        return this;\n    }\n    /**\n\t * Shows the Controller after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * controller.show();\n\t * controller.show( false ); // hide\n\t * controller.show( controller._hidden ); // toggle\n\t */ show(show = true) {\n        this._hidden = !show;\n        this.domElement.style.display = this._hidden ? \"none\" : \"\";\n        return this;\n    }\n    /**\n\t * Hides the Controller.\n\t * @returns {this}\n\t */ hide() {\n        return this.show(false);\n    }\n    /**\n\t * Changes this controller into a dropdown of options.\n\t *\n\t * Calling this method on an option controller will simply update the options. However, if this\n\t * controller was not already an option controller, old references to this controller are\n\t * destroyed, and a new controller is added to the end of the GUI.\n\t * @example\n\t * // safe usage\n\t *\n\t * gui.add( obj, 'prop1' ).options( [ 'a', 'b', 'c' ] );\n\t * gui.add( obj, 'prop2' ).options( { Big: 10, Small: 1 } );\n\t * gui.add( obj, 'prop3' );\n\t *\n\t * // danger\n\t *\n\t * const ctrl1 = gui.add( obj, 'prop1' );\n\t * gui.add( obj, 'prop2' );\n\t *\n\t * // calling options out of order adds a new controller to the end...\n\t * const ctrl2 = ctrl1.options( [ 'a', 'b', 'c' ] );\n\t *\n\t * // ...and ctrl1 now references a controller that doesn't exist\n\t * assert( ctrl2 !== ctrl1 )\n\t * @param {object|Array} options\n\t * @returns {Controller}\n\t */ options(options) {\n        const controller = this.parent.add(this.object, this.property, options);\n        controller.name(this._name);\n        this.destroy();\n        return controller;\n    }\n    /**\n\t * Sets the minimum value. Only works on number controllers.\n\t * @param {number} min\n\t * @returns {this}\n\t */ min(min) {\n        return this;\n    }\n    /**\n\t * Sets the maximum value. Only works on number controllers.\n\t * @param {number} max\n\t * @returns {this}\n\t */ max(max) {\n        return this;\n    }\n    /**\n\t * Values set by this controller will be rounded to multiples of `step`. Only works on number\n\t * controllers.\n\t * @param {number} step\n\t * @returns {this}\n\t */ step(step) {\n        return this;\n    }\n    /**\n\t * Rounds the displayed value to a fixed number of decimals, without affecting the actual value\n\t * like `step()`. Only works on number controllers.\n\t * @example\n\t * gui.add( object, 'property' ).listen().decimals( 4 );\n\t * @param {number} decimals\n\t * @returns {this}\n\t */ decimals(decimals) {\n        return this;\n    }\n    /**\n\t * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n\t * @param {boolean} listen\n\t * @returns {this}\n\t */ listen(listen = true) {\n        /**\n\t\t * Used to determine if the controller is currently listening. Don't modify this value\n\t\t * directly. Use the `controller.listen( true|false )` method instead.\n\t\t * @type {boolean}\n\t\t */ this._listening = listen;\n        if (this._listenCallbackID !== undefined) {\n            cancelAnimationFrame(this._listenCallbackID);\n            this._listenCallbackID = undefined;\n        }\n        if (this._listening) this._listenCallback();\n        return this;\n    }\n    _listenCallback() {\n        this._listenCallbackID = requestAnimationFrame(this._listenCallback);\n        // To prevent framerate loss, make sure the value has changed before updating the display.\n        // Note: save() is used here instead of getValue() only because of ColorController. The !== operator\n        // won't work for color objects or arrays, but ColorController.save() always returns a string.\n        const curValue = this.save();\n        if (curValue !== this._listenPrevValue) this.updateDisplay();\n        this._listenPrevValue = curValue;\n    }\n    /**\n\t * Returns `object[ property ]`.\n\t * @returns {any}\n\t */ getValue() {\n        return this.object[this.property];\n    }\n    /**\n\t * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n\t * @param {any} value\n\t * @returns {this}\n\t */ setValue(value) {\n        if (this.getValue() !== value) {\n            this.object[this.property] = value;\n            this._callOnChange();\n            this.updateDisplay();\n        }\n        return this;\n    }\n    /**\n\t * Updates the display to keep it in sync with the current value. Useful for updating your\n\t * controllers when their values have been modified outside of the GUI.\n\t * @returns {this}\n\t */ updateDisplay() {\n        return this;\n    }\n    load(value) {\n        this.setValue(value);\n        this._callOnFinishChange();\n        return this;\n    }\n    save() {\n        return this.getValue();\n    }\n    /**\n\t * Destroys this controller and removes it from the parent GUI.\n\t */ destroy() {\n        this.listen(false);\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n        this.parent.controllers.splice(this.parent.controllers.indexOf(this), 1);\n        this.parent.$children.removeChild(this.domElement);\n    }\n}\nclass $6e44765c12ddb126$export$c6f57966aed3cc84 extends $6e44765c12ddb126$export$bd0bf19f25da8474 {\n    constructor(parent, object, property){\n        super(parent, object, property, \"boolean\", \"label\");\n        this.$input = document.createElement(\"input\");\n        this.$input.setAttribute(\"type\", \"checkbox\");\n        this.$input.setAttribute(\"aria-labelledby\", this.$name.id);\n        this.$widget.appendChild(this.$input);\n        this.$input.addEventListener(\"change\", ()=>{\n            this.setValue(this.$input.checked);\n            this._callOnFinishChange();\n        });\n        this.$disable = this.$input;\n        this.updateDisplay();\n    }\n    updateDisplay() {\n        this.$input.checked = this.getValue();\n        return this;\n    }\n}\nfunction $6e44765c12ddb126$var$normalizeColorString(string) {\n    let match, result;\n    if (match = string.match(/(#|0x)?([a-f0-9]{6})/i)) result = match[2];\n    else if (match = string.match(/rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/)) result = parseInt(match[1]).toString(16).padStart(2, 0) + parseInt(match[2]).toString(16).padStart(2, 0) + parseInt(match[3]).toString(16).padStart(2, 0);\n    else if (match = string.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i)) result = match[1] + match[1] + match[2] + match[2] + match[3] + match[3];\n    if (result) return \"#\" + result;\n    return false;\n}\nconst $6e44765c12ddb126$var$STRING = {\n    isPrimitive: true,\n    match: (v)=>typeof v === \"string\",\n    fromHexString: $6e44765c12ddb126$var$normalizeColorString,\n    toHexString: $6e44765c12ddb126$var$normalizeColorString\n};\nconst $6e44765c12ddb126$var$INT = {\n    isPrimitive: true,\n    match: (v)=>typeof v === \"number\",\n    fromHexString: (string)=>parseInt(string.substring(1), 16),\n    toHexString: (value)=>\"#\" + value.toString(16).padStart(6, 0)\n};\nconst $6e44765c12ddb126$var$ARRAY = {\n    isPrimitive: false,\n    // The arrow function is here to appease tree shakers like esbuild or webpack.\n    // See https://esbuild.github.io/api/#tree-shaking\n    match: (v)=>Array.isArray(v),\n    fromHexString (string, target, rgbScale = 1) {\n        const int = $6e44765c12ddb126$var$INT.fromHexString(string);\n        target[0] = (int >> 16 & 255) / 255 * rgbScale;\n        target[1] = (int >> 8 & 255) / 255 * rgbScale;\n        target[2] = (int & 255) / 255 * rgbScale;\n    },\n    toHexString ([r, g, b], rgbScale = 1) {\n        rgbScale = 255 / rgbScale;\n        const int = r * rgbScale << 16 ^ g * rgbScale << 8 ^ b * rgbScale << 0;\n        return $6e44765c12ddb126$var$INT.toHexString(int);\n    }\n};\nconst $6e44765c12ddb126$var$OBJECT = {\n    isPrimitive: false,\n    match: (v)=>Object(v) === v,\n    fromHexString (string, target, rgbScale = 1) {\n        const int = $6e44765c12ddb126$var$INT.fromHexString(string);\n        target.r = (int >> 16 & 255) / 255 * rgbScale;\n        target.g = (int >> 8 & 255) / 255 * rgbScale;\n        target.b = (int & 255) / 255 * rgbScale;\n    },\n    toHexString ({ r: r, g: g, b: b }, rgbScale = 1) {\n        rgbScale = 255 / rgbScale;\n        const int = r * rgbScale << 16 ^ g * rgbScale << 8 ^ b * rgbScale << 0;\n        return $6e44765c12ddb126$var$INT.toHexString(int);\n    }\n};\nconst $6e44765c12ddb126$var$FORMATS = [\n    $6e44765c12ddb126$var$STRING,\n    $6e44765c12ddb126$var$INT,\n    $6e44765c12ddb126$var$ARRAY,\n    $6e44765c12ddb126$var$OBJECT\n];\nfunction $6e44765c12ddb126$var$getColorFormat(value) {\n    return $6e44765c12ddb126$var$FORMATS.find((format)=>format.match(value));\n}\nclass $6e44765c12ddb126$export$3a401c49038ca28a extends $6e44765c12ddb126$export$bd0bf19f25da8474 {\n    constructor(parent, object, property, rgbScale){\n        super(parent, object, property, \"color\");\n        this.$input = document.createElement(\"input\");\n        this.$input.setAttribute(\"type\", \"color\");\n        this.$input.setAttribute(\"tabindex\", -1);\n        this.$input.setAttribute(\"aria-labelledby\", this.$name.id);\n        this.$text = document.createElement(\"input\");\n        this.$text.setAttribute(\"type\", \"text\");\n        this.$text.setAttribute(\"spellcheck\", \"false\");\n        this.$text.setAttribute(\"aria-labelledby\", this.$name.id);\n        this.$display = document.createElement(\"div\");\n        this.$display.classList.add(\"display\");\n        this.$display.appendChild(this.$input);\n        this.$widget.appendChild(this.$display);\n        this.$widget.appendChild(this.$text);\n        this._format = $6e44765c12ddb126$var$getColorFormat(this.initialValue);\n        this._rgbScale = rgbScale;\n        this._initialValueHexString = this.save();\n        this._textFocused = false;\n        this.$input.addEventListener(\"input\", ()=>{\n            this._setValueFromHexString(this.$input.value);\n        });\n        this.$input.addEventListener(\"blur\", ()=>{\n            this._callOnFinishChange();\n        });\n        this.$text.addEventListener(\"input\", ()=>{\n            const tryParse = $6e44765c12ddb126$var$normalizeColorString(this.$text.value);\n            if (tryParse) this._setValueFromHexString(tryParse);\n        });\n        this.$text.addEventListener(\"focus\", ()=>{\n            this._textFocused = true;\n            this.$text.select();\n        });\n        this.$text.addEventListener(\"blur\", ()=>{\n            this._textFocused = false;\n            this.updateDisplay();\n            this._callOnFinishChange();\n        });\n        this.$disable = this.$text;\n        this.updateDisplay();\n    }\n    reset() {\n        this._setValueFromHexString(this._initialValueHexString);\n        return this;\n    }\n    _setValueFromHexString(value) {\n        if (this._format.isPrimitive) {\n            const newValue = this._format.fromHexString(value);\n            this.setValue(newValue);\n        } else {\n            this._format.fromHexString(value, this.getValue(), this._rgbScale);\n            this._callOnChange();\n            this.updateDisplay();\n        }\n    }\n    save() {\n        return this._format.toHexString(this.getValue(), this._rgbScale);\n    }\n    load(value) {\n        this._setValueFromHexString(value);\n        this._callOnFinishChange();\n        return this;\n    }\n    updateDisplay() {\n        this.$input.value = this._format.toHexString(this.getValue(), this._rgbScale);\n        if (!this._textFocused) this.$text.value = this.$input.value.substring(1);\n        this.$display.style.backgroundColor = this.$input.value;\n        return this;\n    }\n}\nclass $6e44765c12ddb126$export$2d7dcf9d07c8b352 extends $6e44765c12ddb126$export$bd0bf19f25da8474 {\n    constructor(parent, object, property){\n        super(parent, object, property, \"function\");\n        // Buttons are the only case where widget contains name\n        this.$button = document.createElement(\"button\");\n        this.$button.appendChild(this.$name);\n        this.$widget.appendChild(this.$button);\n        this.$button.addEventListener(\"click\", (e)=>{\n            e.preventDefault();\n            this.getValue().call(this.object);\n            this._callOnChange();\n        });\n        // enables :active pseudo class on mobile\n        this.$button.addEventListener(\"touchstart\", ()=>{}, {\n            passive: true\n        });\n        this.$disable = this.$button;\n    }\n}\nclass $6e44765c12ddb126$export$ee52b68072d314b9 extends $6e44765c12ddb126$export$bd0bf19f25da8474 {\n    constructor(parent, object, property, min, max, step){\n        super(parent, object, property, \"number\");\n        this._initInput();\n        this.min(min);\n        this.max(max);\n        const stepExplicit = step !== undefined;\n        this.step(stepExplicit ? step : this._getImplicitStep(), stepExplicit);\n        this.updateDisplay();\n    }\n    decimals(decimals) {\n        this._decimals = decimals;\n        this.updateDisplay();\n        return this;\n    }\n    min(min) {\n        this._min = min;\n        this._onUpdateMinMax();\n        return this;\n    }\n    max(max) {\n        this._max = max;\n        this._onUpdateMinMax();\n        return this;\n    }\n    step(step, explicit = true) {\n        this._step = step;\n        this._stepExplicit = explicit;\n        return this;\n    }\n    updateDisplay() {\n        const value = this.getValue();\n        if (this._hasSlider) {\n            let percent = (value - this._min) / (this._max - this._min);\n            percent = Math.max(0, Math.min(percent, 1));\n            this.$fill.style.width = percent * 100 + \"%\";\n        }\n        if (!this._inputFocused) this.$input.value = this._decimals === undefined ? value : value.toFixed(this._decimals);\n        return this;\n    }\n    _initInput() {\n        this.$input = document.createElement(\"input\");\n        this.$input.setAttribute(\"type\", \"text\");\n        this.$input.setAttribute(\"aria-labelledby\", this.$name.id);\n        // On touch devices only, use input[type=number] to force a numeric keyboard.\n        // Ideally we could use one input type everywhere, but [type=number] has quirks\n        // on desktop, and [inputmode=decimal] has quirks on iOS.\n        // See https://github.com/georgealways/lil-gui/pull/16\n        const isTouch = window.matchMedia(\"(pointer: coarse)\").matches;\n        if (isTouch) {\n            this.$input.setAttribute(\"type\", \"number\");\n            this.$input.setAttribute(\"step\", \"any\");\n        }\n        this.$widget.appendChild(this.$input);\n        this.$disable = this.$input;\n        const onInput = ()=>{\n            let value = parseFloat(this.$input.value);\n            if (isNaN(value)) return;\n            if (this._stepExplicit) value = this._snap(value);\n            this.setValue(this._clamp(value));\n        };\n        // Keys & mouse wheel\n        // ---------------------------------------------------------------------\n        const increment = (delta)=>{\n            const value = parseFloat(this.$input.value);\n            if (isNaN(value)) return;\n            this._snapClampSetValue(value + delta);\n            // Force the input to updateDisplay when it's focused\n            this.$input.value = this.getValue();\n        };\n        const onKeyDown = (e)=>{\n            // Using `e.key` instead of `e.code` also catches NumpadEnter\n            if (e.key === \"Enter\") this.$input.blur();\n            if (e.code === \"ArrowUp\") {\n                e.preventDefault();\n                increment(this._step * this._arrowKeyMultiplier(e));\n            }\n            if (e.code === \"ArrowDown\") {\n                e.preventDefault();\n                increment(this._step * this._arrowKeyMultiplier(e) * -1);\n            }\n        };\n        const onWheel = (e)=>{\n            if (this._inputFocused) {\n                e.preventDefault();\n                increment(this._step * this._normalizeMouseWheel(e));\n            }\n        };\n        // Vertical drag\n        // ---------------------------------------------------------------------\n        let testingForVerticalDrag = false, initClientX, initClientY, prevClientY, initValue, dragDelta;\n        // Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n        // on the user's intent: horizontal means highlight, vertical means drag.\n        const DRAG_THRESH = 5;\n        const onMouseDown = (e)=>{\n            initClientX = e.clientX;\n            initClientY = prevClientY = e.clientY;\n            testingForVerticalDrag = true;\n            initValue = this.getValue();\n            dragDelta = 0;\n            window.addEventListener(\"mousemove\", onMouseMove);\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n        const onMouseMove = (e)=>{\n            if (testingForVerticalDrag) {\n                const dx = e.clientX - initClientX;\n                const dy = e.clientY - initClientY;\n                if (Math.abs(dy) > DRAG_THRESH) {\n                    e.preventDefault();\n                    this.$input.blur();\n                    testingForVerticalDrag = false;\n                    this._setDraggingStyle(true, \"vertical\");\n                } else if (Math.abs(dx) > DRAG_THRESH) onMouseUp();\n            }\n            // This isn't an else so that the first move counts towards dragDelta\n            if (!testingForVerticalDrag) {\n                const dy = e.clientY - prevClientY;\n                dragDelta -= dy * this._step * this._arrowKeyMultiplier(e);\n                // Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n                // We're okay with the fact that bounds can be undefined here.\n                if (initValue + dragDelta > this._max) dragDelta = this._max - initValue;\n                else if (initValue + dragDelta < this._min) dragDelta = this._min - initValue;\n                this._snapClampSetValue(initValue + dragDelta);\n            }\n            prevClientY = e.clientY;\n        };\n        const onMouseUp = ()=>{\n            this._setDraggingStyle(false, \"vertical\");\n            this._callOnFinishChange();\n            window.removeEventListener(\"mousemove\", onMouseMove);\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n        // Focus state & onFinishChange\n        // ---------------------------------------------------------------------\n        const onFocus = ()=>{\n            this._inputFocused = true;\n        };\n        const onBlur = ()=>{\n            this._inputFocused = false;\n            this.updateDisplay();\n            this._callOnFinishChange();\n        };\n        this.$input.addEventListener(\"input\", onInput);\n        this.$input.addEventListener(\"keydown\", onKeyDown);\n        this.$input.addEventListener(\"wheel\", onWheel, {\n            passive: false\n        });\n        this.$input.addEventListener(\"mousedown\", onMouseDown);\n        this.$input.addEventListener(\"focus\", onFocus);\n        this.$input.addEventListener(\"blur\", onBlur);\n    }\n    _initSlider() {\n        this._hasSlider = true;\n        // Build DOM\n        // ---------------------------------------------------------------------\n        this.$slider = document.createElement(\"div\");\n        this.$slider.classList.add(\"slider\");\n        this.$fill = document.createElement(\"div\");\n        this.$fill.classList.add(\"fill\");\n        this.$slider.appendChild(this.$fill);\n        this.$widget.insertBefore(this.$slider, this.$input);\n        this.domElement.classList.add(\"hasSlider\");\n        // Map clientX to value\n        // ---------------------------------------------------------------------\n        const map = (v, a, b, c, d)=>{\n            return (v - a) / (b - a) * (d - c) + c;\n        };\n        const setValueFromX = (clientX)=>{\n            const rect = this.$slider.getBoundingClientRect();\n            let value = map(clientX, rect.left, rect.right, this._min, this._max);\n            this._snapClampSetValue(value);\n        };\n        // Mouse drag\n        // ---------------------------------------------------------------------\n        const mouseDown = (e)=>{\n            this._setDraggingStyle(true);\n            setValueFromX(e.clientX);\n            window.addEventListener(\"mousemove\", mouseMove);\n            window.addEventListener(\"mouseup\", mouseUp);\n        };\n        const mouseMove = (e)=>{\n            setValueFromX(e.clientX);\n        };\n        const mouseUp = ()=>{\n            this._callOnFinishChange();\n            this._setDraggingStyle(false);\n            window.removeEventListener(\"mousemove\", mouseMove);\n            window.removeEventListener(\"mouseup\", mouseUp);\n        };\n        // Touch drag\n        // ---------------------------------------------------------------------\n        let testingForScroll = false, prevClientX, prevClientY;\n        const beginTouchDrag = (e)=>{\n            e.preventDefault();\n            this._setDraggingStyle(true);\n            setValueFromX(e.touches[0].clientX);\n            testingForScroll = false;\n        };\n        const onTouchStart = (e)=>{\n            if (e.touches.length > 1) return;\n            // If we're in a scrollable container, we should wait for the first\n            // touchmove to see if the user is trying to slide or scroll.\n            if (this._hasScrollBar) {\n                prevClientX = e.touches[0].clientX;\n                prevClientY = e.touches[0].clientY;\n                testingForScroll = true;\n            } else // Otherwise, we can set the value straight away on touchstart.\n            beginTouchDrag(e);\n            window.addEventListener(\"touchmove\", onTouchMove, {\n                passive: false\n            });\n            window.addEventListener(\"touchend\", onTouchEnd);\n        };\n        const onTouchMove = (e)=>{\n            if (testingForScroll) {\n                const dx = e.touches[0].clientX - prevClientX;\n                const dy = e.touches[0].clientY - prevClientY;\n                if (Math.abs(dx) > Math.abs(dy)) // We moved horizontally, set the value and stop checking.\n                beginTouchDrag(e);\n                else {\n                    // This was, in fact, an attempt to scroll. Abort.\n                    window.removeEventListener(\"touchmove\", onTouchMove);\n                    window.removeEventListener(\"touchend\", onTouchEnd);\n                }\n            } else {\n                e.preventDefault();\n                setValueFromX(e.touches[0].clientX);\n            }\n        };\n        const onTouchEnd = ()=>{\n            this._callOnFinishChange();\n            this._setDraggingStyle(false);\n            window.removeEventListener(\"touchmove\", onTouchMove);\n            window.removeEventListener(\"touchend\", onTouchEnd);\n        };\n        // Mouse wheel\n        // ---------------------------------------------------------------------\n        // We have to use a debounced function to call onFinishChange because\n        // there's no way to tell when the user is \"done\" mouse-wheeling.\n        const callOnFinishChange = this._callOnFinishChange.bind(this);\n        const WHEEL_DEBOUNCE_TIME = 400;\n        let wheelFinishChangeTimeout;\n        const onWheel = (e)=>{\n            // ignore vertical wheels if there's a scrollbar\n            const isVertical = Math.abs(e.deltaX) < Math.abs(e.deltaY);\n            if (isVertical && this._hasScrollBar) return;\n            e.preventDefault();\n            // set value\n            const delta = this._normalizeMouseWheel(e) * this._step;\n            this._snapClampSetValue(this.getValue() + delta);\n            // force the input to updateDisplay when it's focused\n            this.$input.value = this.getValue();\n            // debounce onFinishChange\n            clearTimeout(wheelFinishChangeTimeout);\n            wheelFinishChangeTimeout = setTimeout(callOnFinishChange, WHEEL_DEBOUNCE_TIME);\n        };\n        this.$slider.addEventListener(\"mousedown\", mouseDown);\n        this.$slider.addEventListener(\"touchstart\", onTouchStart, {\n            passive: false\n        });\n        this.$slider.addEventListener(\"wheel\", onWheel, {\n            passive: false\n        });\n    }\n    _setDraggingStyle(active, axis = \"horizontal\") {\n        if (this.$slider) this.$slider.classList.toggle(\"active\", active);\n        document.body.classList.toggle(\"lil-gui-dragging\", active);\n        document.body.classList.toggle(`lil-gui-${axis}`, active);\n    }\n    _getImplicitStep() {\n        if (this._hasMin && this._hasMax) return (this._max - this._min) / 1000;\n        return 0.1;\n    }\n    _onUpdateMinMax() {\n        if (!this._hasSlider && this._hasMin && this._hasMax) {\n            // If this is the first time we're hearing about min and max\n            // and we haven't explicitly stated what our step is, let's\n            // update that too.\n            if (!this._stepExplicit) this.step(this._getImplicitStep(), false);\n            this._initSlider();\n            this.updateDisplay();\n        }\n    }\n    _normalizeMouseWheel(e) {\n        let { deltaX: deltaX, deltaY: deltaY } = e;\n        // Safari and Chrome report weird non-integral values for a notched wheel,\n        // but still expose actual lines scrolled via wheelDelta. Notched wheels\n        // should behave the same way as arrow keys.\n        if (Math.floor(e.deltaY) !== e.deltaY && e.wheelDelta) {\n            deltaX = 0;\n            deltaY = -e.wheelDelta / 120;\n            deltaY *= this._stepExplicit ? 1 : 10;\n        }\n        const wheel = deltaX + -deltaY;\n        return wheel;\n    }\n    _arrowKeyMultiplier(e) {\n        let mult = this._stepExplicit ? 1 : 10;\n        if (e.shiftKey) mult *= 10;\n        else if (e.altKey) mult /= 10;\n        return mult;\n    }\n    _snap(value) {\n        // Make the steps \"start\" at min or max.\n        let offset = 0;\n        if (this._hasMin) offset = this._min;\n        else if (this._hasMax) offset = this._max;\n        value -= offset;\n        value = Math.round(value / this._step) * this._step;\n        value += offset;\n        // Used to prevent \"flyaway\" decimals like 1.00000000000001\n        value = parseFloat(value.toPrecision(15));\n        return value;\n    }\n    _clamp(value) {\n        // either condition is false if min or max is undefined\n        if (value < this._min) value = this._min;\n        if (value > this._max) value = this._max;\n        return value;\n    }\n    _snapClampSetValue(value) {\n        this.setValue(this._clamp(this._snap(value)));\n    }\n    get _hasScrollBar() {\n        const root = this.parent.root.$children;\n        return root.scrollHeight > root.clientHeight;\n    }\n    get _hasMin() {\n        return this._min !== undefined;\n    }\n    get _hasMax() {\n        return this._max !== undefined;\n    }\n}\nclass $6e44765c12ddb126$export$25f00c724c27c8b4 extends $6e44765c12ddb126$export$bd0bf19f25da8474 {\n    constructor(parent, object, property, options){\n        super(parent, object, property, \"option\");\n        this.$select = document.createElement(\"select\");\n        this.$select.setAttribute(\"aria-labelledby\", this.$name.id);\n        this.$display = document.createElement(\"div\");\n        this.$display.classList.add(\"display\");\n        this.$select.addEventListener(\"change\", ()=>{\n            this.setValue(this._values[this.$select.selectedIndex]);\n            this._callOnFinishChange();\n        });\n        this.$select.addEventListener(\"focus\", ()=>{\n            this.$display.classList.add(\"focus\");\n        });\n        this.$select.addEventListener(\"blur\", ()=>{\n            this.$display.classList.remove(\"focus\");\n        });\n        this.$widget.appendChild(this.$select);\n        this.$widget.appendChild(this.$display);\n        this.$disable = this.$select;\n        this.options(options);\n    }\n    options(options) {\n        this._values = Array.isArray(options) ? options : Object.values(options);\n        this._names = Array.isArray(options) ? options : Object.keys(options);\n        this.$select.replaceChildren();\n        this._names.forEach((name)=>{\n            const $option = document.createElement(\"option\");\n            $option.textContent = name;\n            this.$select.appendChild($option);\n        });\n        this.updateDisplay();\n        return this;\n    }\n    updateDisplay() {\n        const value = this.getValue();\n        const index = this._values.indexOf(value);\n        this.$select.selectedIndex = index;\n        this.$display.textContent = index === -1 ? value : this._names[index];\n        return this;\n    }\n}\nclass $6e44765c12ddb126$export$786d0ebe8f71368e extends $6e44765c12ddb126$export$bd0bf19f25da8474 {\n    constructor(parent, object, property){\n        super(parent, object, property, \"string\");\n        this.$input = document.createElement(\"input\");\n        this.$input.setAttribute(\"type\", \"text\");\n        this.$input.setAttribute(\"spellcheck\", \"false\");\n        this.$input.setAttribute(\"aria-labelledby\", this.$name.id);\n        this.$input.addEventListener(\"input\", ()=>{\n            this.setValue(this.$input.value);\n        });\n        this.$input.addEventListener(\"keydown\", (e)=>{\n            if (e.code === \"Enter\") this.$input.blur();\n        });\n        this.$input.addEventListener(\"blur\", ()=>{\n            this._callOnFinishChange();\n        });\n        this.$widget.appendChild(this.$input);\n        this.$disable = this.$input;\n        this.updateDisplay();\n    }\n    updateDisplay() {\n        this.$input.value = this.getValue();\n        return this;\n    }\n}\nvar $6e44765c12ddb126$var$stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"\\u{2195}\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  width: 100%;\n  text-align: left;\n  background: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"\\u{25BE}\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"\\u{25B8}\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"\\u{2713}\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  border: none;\n}\n.lil-gui .controller button {\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n}\n@media (hover: hover) {\n  .lil-gui .controller button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui .controller button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui .controller button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\nfunction $6e44765c12ddb126$var$_injectStyles(cssContent) {\n    const injected = document.createElement(\"style\");\n    injected.innerHTML = cssContent;\n    const before = document.querySelector(\"head link[rel=stylesheet], head style\");\n    if (before) document.head.insertBefore(injected, before);\n    else document.head.appendChild(injected);\n}\nlet $6e44765c12ddb126$var$stylesInjected = false;\nclass $6e44765c12ddb126$export$983832d820c96993 {\n    /**\n\t * Creates a panel that holds controllers.\n\t * @example\n\t * new GUI();\n\t * new GUI( { container: document.getElementById( 'custom' ) } );\n\t *\n\t * @param {object} [options]\n\t * @param {boolean} [options.autoPlace=true]\n\t * Adds the GUI to `document.body` and fixes it to the top right of the page.\n\t *\n\t * @param {HTMLElement} [options.container]\n\t * Adds the GUI to this DOM element. Overrides `autoPlace`.\n\t *\n\t * @param {number} [options.width=245]\n\t * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n\t * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`.\n\t *\n\t * @param {string} [options.title=Controls]\n\t * Name to display in the title bar.\n\t *\n\t * @param {boolean} [options.closeFolders=false]\n\t * Pass `true` to close all folders in this GUI by default.\n\t *\n\t * @param {boolean} [options.injectStyles=true]\n\t * Injects the default stylesheet into the page if this is the first GUI.\n\t * Pass `false` to use your own stylesheet.\n\t *\n\t * @param {number} [options.touchStyles=true]\n\t * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n\t *\n\t * @param {GUI} [options.parent]\n\t * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n\t */ constructor({ parent: parent, autoPlace: autoPlace = parent === undefined, container: container, width: width, title: title = \"Controls\", closeFolders: closeFolders = false, injectStyles: injectStyles = true, touchStyles: touchStyles = true } = {}){\n        /**\n\t\t * The GUI containing this folder, or `undefined` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */ this.parent = parent;\n        /**\n\t\t * The top level GUI containing this folder, or `this` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */ this.root = parent ? parent.root : this;\n        /**\n\t\t * The list of controllers and folders contained by this GUI.\n\t\t * @type {Array<GUI|Controller>}\n\t\t */ this.children = [];\n        /**\n\t\t * The list of controllers contained by this GUI.\n\t\t * @type {Array<Controller>}\n\t\t */ this.controllers = [];\n        /**\n\t\t * The list of folders contained by this GUI.\n\t\t * @type {Array<GUI>}\n\t\t */ this.folders = [];\n        /**\n\t\t * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n\t\t * @type {boolean}\n\t\t */ this._closed = false;\n        /**\n\t\t * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */ this._hidden = false;\n        /**\n\t\t * The outermost container element.\n\t\t * @type {HTMLElement}\n\t\t */ this.domElement = document.createElement(\"div\");\n        this.domElement.classList.add(\"lil-gui\");\n        /**\n\t\t * The DOM element that contains the title.\n\t\t * @type {HTMLElement}\n\t\t */ this.$title = document.createElement(\"button\");\n        this.$title.classList.add(\"title\");\n        this.$title.setAttribute(\"aria-expanded\", true);\n        this.$title.addEventListener(\"click\", ()=>this.openAnimated(this._closed));\n        // enables :active pseudo class on mobile\n        this.$title.addEventListener(\"touchstart\", ()=>{}, {\n            passive: true\n        });\n        /**\n\t\t * The DOM element that contains children.\n\t\t * @type {HTMLElement}\n\t\t */ this.$children = document.createElement(\"div\");\n        this.$children.classList.add(\"children\");\n        this.domElement.appendChild(this.$title);\n        this.domElement.appendChild(this.$children);\n        this.title(title);\n        if (this.parent) {\n            this.parent.children.push(this);\n            this.parent.folders.push(this);\n            this.parent.$children.appendChild(this.domElement);\n            // Stop the constructor early, everything onward only applies to root GUI's\n            return;\n        }\n        this.domElement.classList.add(\"root\");\n        if (touchStyles) this.domElement.classList.add(\"allow-touch-styles\");\n        // Inject stylesheet if we haven't done that yet\n        if (!$6e44765c12ddb126$var$stylesInjected && injectStyles) {\n            $6e44765c12ddb126$var$_injectStyles($6e44765c12ddb126$var$stylesheet);\n            $6e44765c12ddb126$var$stylesInjected = true;\n        }\n        if (container) container.appendChild(this.domElement);\n        else if (autoPlace) {\n            this.domElement.classList.add(\"autoPlace\");\n            document.body.appendChild(this.domElement);\n        }\n        if (width) this.domElement.style.setProperty(\"--width\", width + \"px\");\n        this._closeFolders = closeFolders;\n    }\n    /**\n\t * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n\t * @example\n\t * gui.add( object, 'property' );\n\t * gui.add( object, 'number', 0, 100, 1 );\n\t * gui.add( object, 'options', [ 1, 2, 3 ] );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n\t * selectable values for a dropdown.\n\t * @param {number} [max] Maximum value for number controllers.\n\t * @param {number} [step] Step value for number controllers.\n\t * @returns {Controller}\n\t */ add(object, property, $1, max, step) {\n        if (Object($1) === $1) return new $6e44765c12ddb126$export$25f00c724c27c8b4(this, object, property, $1);\n        const initialValue = object[property];\n        switch(typeof initialValue){\n            case \"number\":\n                return new $6e44765c12ddb126$export$ee52b68072d314b9(this, object, property, $1, max, step);\n            case \"boolean\":\n                return new $6e44765c12ddb126$export$c6f57966aed3cc84(this, object, property);\n            case \"string\":\n                return new $6e44765c12ddb126$export$786d0ebe8f71368e(this, object, property);\n            case \"function\":\n                return new $6e44765c12ddb126$export$2d7dcf9d07c8b352(this, object, property);\n        }\n        console.error(`gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue);\n    }\n    /**\n\t * Adds a color controller to the GUI.\n\t * @example\n\t * params = {\n\t * \tcssColor: '#ff00ff',\n\t * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n\t * \tcustomRange: [ 0, 127, 255 ],\n\t * };\n\t *\n\t * gui.addColor( params, 'cssColor' );\n\t * gui.addColor( params, 'rgbColor' );\n\t * gui.addColor( params, 'customRange', 255 );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n\t * need to set this to 255 if your colors are too bright.\n\t * @returns {Controller}\n\t */ addColor(object, property, rgbScale = 1) {\n        return new $6e44765c12ddb126$export$3a401c49038ca28a(this, object, property, rgbScale);\n    }\n    /**\n\t * Adds a folder to the GUI, which is just another GUI. This method returns\n\t * the nested GUI so you can add controllers to it.\n\t * @example\n\t * const folder = gui.addFolder( 'Position' );\n\t * folder.add( position, 'x' );\n\t * folder.add( position, 'y' );\n\t * folder.add( position, 'z' );\n\t *\n\t * @param {string} title Name to display in the folder's title bar.\n\t * @returns {GUI}\n\t */ addFolder(title) {\n        const folder = new $6e44765c12ddb126$export$983832d820c96993({\n            parent: this,\n            title: title\n        });\n        if (this.root._closeFolders) folder.close();\n        return folder;\n    }\n    /**\n\t * Recalls values that were saved with `gui.save()`.\n\t * @param {object} obj\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */ load(obj, recursive = true) {\n        if (obj.controllers) this.controllers.forEach((c)=>{\n            if (c instanceof $6e44765c12ddb126$export$2d7dcf9d07c8b352) return;\n            if (c._name in obj.controllers) c.load(obj.controllers[c._name]);\n        });\n        if (recursive && obj.folders) this.folders.forEach((f)=>{\n            if (f._title in obj.folders) f.load(obj.folders[f._title]);\n        });\n        return this;\n    }\n    /**\n\t * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n\t * recall these values.\n\t * @example\n\t * {\n\t * \tcontrollers: {\n\t * \t\tprop1: 1,\n\t * \t\tprop2: 'value',\n\t * \t\t...\n\t * \t},\n\t * \tfolders: {\n\t * \t\tfolderName1: { controllers, folders },\n\t * \t\tfolderName2: { controllers, folders }\n\t * \t\t...\n\t * \t}\n\t * }\n\t *\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {object}\n\t */ save(recursive = true) {\n        const obj = {\n            controllers: {},\n            folders: {}\n        };\n        this.controllers.forEach((c)=>{\n            if (c instanceof $6e44765c12ddb126$export$2d7dcf9d07c8b352) return;\n            if (c._name in obj.controllers) throw new Error(`Cannot save GUI with duplicate property \"${c._name}\"`);\n            obj.controllers[c._name] = c.save();\n        });\n        if (recursive) this.folders.forEach((f)=>{\n            if (f._title in obj.folders) throw new Error(`Cannot save GUI with duplicate folder \"${f._title}\"`);\n            obj.folders[f._title] = f.save();\n        });\n        return obj;\n    }\n    /**\n\t * Opens a GUI or folder. GUI and folders are open by default.\n\t * @param {boolean} open Pass false to close.\n\t * @returns {this}\n\t * @example\n\t * gui.open(); // open\n\t * gui.open( false ); // close\n\t * gui.open( gui._closed ); // toggle\n\t */ open(open = true) {\n        this._setClosed(!open);\n        this.$title.setAttribute(\"aria-expanded\", !this._closed);\n        this.domElement.classList.toggle(\"closed\", this._closed);\n        return this;\n    }\n    /**\n\t * Closes the GUI.\n\t * @returns {this}\n\t */ close() {\n        return this.open(false);\n    }\n    _setClosed(closed) {\n        if (this._closed === closed) return;\n        this._closed = closed;\n        this._callOnOpenClose(this);\n    }\n    /**\n\t * Shows the GUI after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * gui.show();\n\t * gui.show( false ); // hide\n\t * gui.show( gui._hidden ); // toggle\n\t */ show(show = true) {\n        this._hidden = !show;\n        this.domElement.style.display = this._hidden ? \"none\" : \"\";\n        return this;\n    }\n    /**\n\t * Hides the GUI.\n\t * @returns {this}\n\t */ hide() {\n        return this.show(false);\n    }\n    openAnimated(open = true) {\n        // set state immediately\n        this._setClosed(!open);\n        this.$title.setAttribute(\"aria-expanded\", !this._closed);\n        // wait for next frame to measure $children\n        requestAnimationFrame(()=>{\n            // explicitly set initial height for transition\n            const initialHeight = this.$children.clientHeight;\n            this.$children.style.height = initialHeight + \"px\";\n            this.domElement.classList.add(\"transition\");\n            const onTransitionEnd = (e)=>{\n                if (e.target !== this.$children) return;\n                this.$children.style.height = \"\";\n                this.domElement.classList.remove(\"transition\");\n                this.$children.removeEventListener(\"transitionend\", onTransitionEnd);\n            };\n            this.$children.addEventListener(\"transitionend\", onTransitionEnd);\n            // todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n            const targetHeight = !open ? 0 : this.$children.scrollHeight;\n            this.domElement.classList.toggle(\"closed\", !open);\n            requestAnimationFrame(()=>{\n                this.$children.style.height = targetHeight + \"px\";\n            });\n        });\n        return this;\n    }\n    /**\n\t * Change the title of this GUI.\n\t * @param {string} title\n\t * @returns {this}\n\t */ title(title) {\n        /**\n\t\t * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n\t\t * @type {string}\n\t\t */ this._title = title;\n        this.$title.textContent = title;\n        return this;\n    }\n    /**\n\t * Resets all controllers to their initial values.\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */ reset(recursive = true) {\n        const controllers = recursive ? this.controllersRecursive() : this.controllers;\n        controllers.forEach((c)=>c.reset());\n        return this;\n    }\n    /**\n\t * Pass a function to be called whenever a controller in this GUI changes.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */ onChange(callback) {\n        /**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */ this._onChange = callback;\n        return this;\n    }\n    _callOnChange(controller) {\n        if (this.parent) this.parent._callOnChange(controller);\n        if (this._onChange !== undefined) this._onChange.call(this, {\n            object: controller.object,\n            property: controller.property,\n            value: controller.getValue(),\n            controller: controller\n        });\n    }\n    /**\n\t * Pass a function to be called whenever a controller in this GUI has finished changing.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onFinishChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */ onFinishChange(callback) {\n        /**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */ this._onFinishChange = callback;\n        return this;\n    }\n    _callOnFinishChange(controller) {\n        if (this.parent) this.parent._callOnFinishChange(controller);\n        if (this._onFinishChange !== undefined) this._onFinishChange.call(this, {\n            object: controller.object,\n            property: controller.property,\n            value: controller.getValue(),\n            controller: controller\n        });\n    }\n    /**\n\t * Pass a function to be called when this GUI or its descendants are opened or closed.\n\t * @param {function(GUI)} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onOpenClose( changedGUI => {\n\t * \tconsole.log( changedGUI._closed );\n\t * } );\n\t */ onOpenClose(callback) {\n        this._onOpenClose = callback;\n        return this;\n    }\n    _callOnOpenClose(changedGUI) {\n        if (this.parent) this.parent._callOnOpenClose(changedGUI);\n        if (this._onOpenClose !== undefined) this._onOpenClose.call(this, changedGUI);\n    }\n    /**\n\t * Destroys all DOM elements and event listeners associated with this GUI.\n\t */ destroy() {\n        if (this.parent) {\n            this.parent.children.splice(this.parent.children.indexOf(this), 1);\n            this.parent.folders.splice(this.parent.folders.indexOf(this), 1);\n        }\n        if (this.domElement.parentElement) this.domElement.parentElement.removeChild(this.domElement);\n        Array.from(this.children).forEach((c)=>c.destroy());\n    }\n    /**\n\t * Returns an array of controllers contained by this GUI and its descendents.\n\t * @returns {Controller[]}\n\t */ controllersRecursive() {\n        let controllers = Array.from(this.controllers);\n        this.folders.forEach((f)=>{\n            controllers = controllers.concat(f.controllersRecursive());\n        });\n        return controllers;\n    }\n    /**\n\t * Returns an array of folders contained by this GUI and its descendents.\n\t * @returns {GUI[]}\n\t */ foldersRecursive() {\n        let folders = Array.from(this.folders);\n        this.folders.forEach((f)=>{\n            folders = folders.concat(f.foldersRecursive());\n        });\n        return folders;\n    }\n}\n\n\n////////////\n/// Set up for stats\n////////////\nvar $17ea8e9e22e211a7$var$stats;\nfunction $17ea8e9e22e211a7$var$setupStats() {\n    $17ea8e9e22e211a7$var$stats = new (0, (/*@__PURE__*/$parcel$interopDefault($8d6448069697305c$exports)))();\n    $17ea8e9e22e211a7$var$stats.setMode(0);\n    $17ea8e9e22e211a7$var$stats.domElement.style.position = \"absolute\";\n    $17ea8e9e22e211a7$var$stats.domElement.style.left = \"150px\";\n    $17ea8e9e22e211a7$var$stats.domElement.style.top = \"200px\";\n    document.body.appendChild($17ea8e9e22e211a7$var$stats.domElement);\n}\n$17ea8e9e22e211a7$var$setupStats();\nfunction $17ea8e9e22e211a7$var$getRenderWidth() {\n    return window.innerWidth; // Adjust based on your needs\n}\nfunction $17ea8e9e22e211a7$var$getRenderHeight() {\n    return window.innerHeight; // Adjust based on your needs\n}\n////////////////////////\n/// global params\n////////////////////////\nconst $17ea8e9e22e211a7$var$geoWidth = 2;\nconst $17ea8e9e22e211a7$var$geoHeight = 2;\nconst $17ea8e9e22e211a7$var$resolution = 128; // Adjust resolution as needed\nconst $17ea8e9e22e211a7$var$params = {\n    isSimRunning: false,\n    step: function() {\n        $17ea8e9e22e211a7$var$params.isSimRunning = true;\n        $17ea8e9e22e211a7$var$params.isSingleStep = true;\n    }\n};\nconst $17ea8e9e22e211a7$var$gui = new (0, $6e44765c12ddb126$export$983832d820c96993)();\n$17ea8e9e22e211a7$var$gui.add($17ea8e9e22e211a7$var$params, \"isSimRunning\");\n$17ea8e9e22e211a7$var$gui.add($17ea8e9e22e211a7$var$params, \"step\");\n$17ea8e9e22e211a7$var$gui.open();\n////////////////////////\n/// Set up scene(main and buffer), camera, and renderer\n////////////////////////\nvar $17ea8e9e22e211a7$var$camera;\nvar $17ea8e9e22e211a7$var$renderer;\nvar $17ea8e9e22e211a7$var$geo;\nvar $17ea8e9e22e211a7$var$displayScene;\nvar $17ea8e9e22e211a7$var$displayMaterial;\nvar $17ea8e9e22e211a7$var$displayMesh;\nvar $17ea8e9e22e211a7$var$bufferScene;\n// var bufferMaterial;\nvar $17ea8e9e22e211a7$var$bufferMesh;\nvar $17ea8e9e22e211a7$var$rt1;\nvar $17ea8e9e22e211a7$var$rt2;\nvar $17ea8e9e22e211a7$var$currentRT;\nvar $17ea8e9e22e211a7$var$nextRT;\nvar $17ea8e9e22e211a7$var$boundaryTexture;\nfunction $17ea8e9e22e211a7$var$createBoundaryMask() {\n    const width = $17ea8e9e22e211a7$var$resolution;\n    const height = $17ea8e9e22e211a7$var$resolution;\n    const data = new Float32Array(width * height * 4);\n    // Set edge pixels to blue (R = 0, G = 0, B = 1, A = 1)\n    for(let y = 0; y < height; y++)for(let x = 0; x < width; x++){\n        const index = (y * width + x) * 4;\n        // Left edge (x = 0)\n        if (x === 0) {\n            data[index] = 0; // Red\n            data[index + 1] = 0; // Green\n            data[index + 2] = 1; // Blue\n            data[index + 3] = 1; // Alpha\n        } else if (x === width - 1) {\n            data[index] = 0; // Red\n            data[index + 1] = 0; // Green\n            data[index + 2] = 1; // Blue\n            data[index + 3] = 1; // Alpha\n        } else if (y === 0) {\n            data[index] = 0; // Red\n            data[index + 1] = 0; // Green\n            data[index + 2] = 1; // Blue\n            data[index + 3] = 1; // Alpha\n        } else if (y === height - 1) {\n            data[index] = 0; // Red\n            data[index + 1] = 0; // Green\n            data[index + 2] = 1; // Blue\n            data[index + 3] = 1; // Alpha\n        }\n    }\n    const texture = new $ilwiq.DataTexture(data, width, height, $ilwiq.RGBAFormat, $ilwiq.FloatType);\n    texture.needsUpdate = true;\n    return texture;\n}\nfunction $17ea8e9e22e211a7$var$createInitialTexture() {\n    const width = $17ea8e9e22e211a7$var$resolution;\n    const height = $17ea8e9e22e211a7$var$resolution;\n    const data = new Float32Array(width * height * 4); // RGBA for each pixel\n    // Create the initial texture (red color)\n    for(let i = 0; i < width * height; i++){\n        data[i * 4 + 0] = Math.random(); // Red channel\n        data[i * 4 + 1] = 0.0; // Green channel\n        data[i * 4 + 2] = 0.0; // Blue channel\n        data[i * 4 + 3] = 1.0; // Alpha channel (opaque)\n    }\n    // Create the boundary texture (this assumes createBoundaryMask() is defined already)\n    const boundaryTexture = $17ea8e9e22e211a7$var$createBoundaryMask();\n    // Overlay boundary texture onto initial texture\n    const boundaryData = boundaryTexture.image.data;\n    for(let i = 0; i < width * height; i++){\n        const index = i * 4;\n        const r1 = data[index + 0]; // Initial Red\n        const g1 = data[index + 1]; // Initial Green\n        const b1 = data[index + 2]; // Initial Blue\n        const a1 = data[index + 3]; // Initial Alpha\n        const r2 = boundaryData[index + 0]; // Boundary Red\n        const g2 = boundaryData[index + 1]; // Boundary Green\n        const b2 = boundaryData[index + 2]; // Boundary Blue\n        const a2 = boundaryData[index + 3]; // Boundary Alpha\n        // Simple blending, using boundary texture's alpha channel for interpolation\n        const alpha = a2; // You can modify this if you want a different blend effect\n        // Blend the colors\n        data[index + 0] = r1 * (1 - alpha) + r2 * alpha; // Red channel blend\n        data[index + 1] = g1 * (1 - alpha) + g2 * alpha; // Green channel blend\n        data[index + 2] = b1 * (1 - alpha) + b2 * alpha; // Blue channel blend\n        data[index + 3] = a1 * (1 - alpha) + a2 * alpha; // Alpha channel blend\n    }\n    const combined = new Float32Array(data.length * 2);\n    combined.set(data);\n    combined.set(data, data.length);\n    const texture = new $ilwiq.DataTexture(data, width, height, $ilwiq.RGBAFormat, $ilwiq.FloatType);\n    texture.needsUpdate = true;\n    return texture;\n}\nfunction $17ea8e9e22e211a7$var$setupScene() {\n    // same across scenes\n    $17ea8e9e22e211a7$var$renderer = new $ilwiq.WebGLRenderer({\n        canvas: document.getElementById(\"fluidCanvas\")\n    });\n    const size = Math.min($17ea8e9e22e211a7$var$getRenderWidth(), $17ea8e9e22e211a7$var$getRenderHeight());\n    $17ea8e9e22e211a7$var$renderer.setSize(size, size);\n    $17ea8e9e22e211a7$var$renderer.setClearColor(\"black\", 1);\n    $17ea8e9e22e211a7$var$camera = new $ilwiq.OrthographicCamera(-1, 1, 1, -1, 1, 1000); //vars: left right top bottom near far //TODO: might need to change camera width and heigh to screen width and height. update those every frame if so.\n    $17ea8e9e22e211a7$var$camera.position.z = 2;\n    $17ea8e9e22e211a7$var$geo = new $ilwiq.PlaneGeometry($17ea8e9e22e211a7$var$geoWidth, $17ea8e9e22e211a7$var$geoHeight);\n    //display scene stuff\n    $17ea8e9e22e211a7$var$displayScene = new $ilwiq.Scene();\n    $17ea8e9e22e211a7$var$displayMaterial = new $ilwiq.MeshBasicMaterial({\n        map: null\n    }); // map will be replaced w the right texture later\n    $17ea8e9e22e211a7$var$displayMesh = new $ilwiq.Mesh($17ea8e9e22e211a7$var$geo, $17ea8e9e22e211a7$var$displayMaterial);\n    $17ea8e9e22e211a7$var$displayScene.add($17ea8e9e22e211a7$var$displayMesh);\n    //buffer stuff  \n    $17ea8e9e22e211a7$var$bufferScene = new $ilwiq.Scene();\n    //no buffer material because we'll assign it dynamically\n    $17ea8e9e22e211a7$var$bufferMesh = new $ilwiq.Mesh($17ea8e9e22e211a7$var$geo, null);\n    $17ea8e9e22e211a7$var$bufferScene.add($17ea8e9e22e211a7$var$bufferMesh);\n    $17ea8e9e22e211a7$var$rt1 = new $ilwiq.WebGLRenderTarget($17ea8e9e22e211a7$var$resolution, $17ea8e9e22e211a7$var$resolution, {\n        format: $ilwiq.RGBAFormat,\n        type: $ilwiq.FloatType,\n        magFilter: $ilwiq.LinearFilter,\n        minFilter: $ilwiq.LinearFilter\n    });\n    $17ea8e9e22e211a7$var$rt2 = new $ilwiq.WebGLRenderTarget($17ea8e9e22e211a7$var$resolution, $17ea8e9e22e211a7$var$resolution, {\n        format: $ilwiq.RGBAFormat,\n        type: $ilwiq.FloatType,\n        magFilter: $ilwiq.LinearFilter,\n        minFilter: $ilwiq.LinearFilter\n    });\n    $17ea8e9e22e211a7$var$rt1.texture = $17ea8e9e22e211a7$var$createInitialTexture();\n    $17ea8e9e22e211a7$var$currentRT = $17ea8e9e22e211a7$var$rt1;\n    $17ea8e9e22e211a7$var$nextRT = $17ea8e9e22e211a7$var$rt2;\n}\n$17ea8e9e22e211a7$var$setupScene();\n////////////////////////\n/// Set up shaders\n////////////////////////\n// var vertexShader;\nvar $17ea8e9e22e211a7$var$shadersDict = {};\nfunction $17ea8e9e22e211a7$var$setupShaders() {\n    const shaderMultiply = new $ilwiq.ShaderMaterial({\n        uniforms: {\n            uTexture: {\n                value: null\n            }\n        },\n        fragmentShader: `uniform image2D uTexture;\r\n\r\n\t\tvoid main() {\r\n\t\t\tvec4 color = texture2D(uTexture, gl_FragCoord.xy / vec2(128, 128));\r\n\t\t\tgl_FragColor = color * vec4(0.5, 1.0, 0.5, 1.0); // Multiply color by greenish color\r\n\t\t}`\n    });\n    $17ea8e9e22e211a7$var$shadersDict[\"shaderMultiply\"] = shaderMultiply;\n    const shaderInvert = new $ilwiq.ShaderMaterial({\n        uniforms: {\n            uTexture: {\n                value: null\n            }\n        },\n        fragmentShader: document.getElementById(\"invert\").innerHTML\n    });\n    $17ea8e9e22e211a7$var$shadersDict[\"shaderInvert\"] = shaderInvert;\n    const boundaryShader = new $ilwiq.ShaderMaterial({\n        uniforms: {\n            uTexture: {\n                value: null\n            },\n            uBoundary: {\n                value: $17ea8e9e22e211a7$var$boundaryTexture\n            }\n        },\n        vertexShader: `varying vec2 vUv;\r\n        void main() {\r\n            vUv = uv;\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n        }`,\n        fragmentShader: document.getElementById(\"boundary\").innerHTML\n    });\n    $17ea8e9e22e211a7$var$shadersDict[\"boundaryShader\"] = boundaryShader;\n    const collisionShader = new $ilwiq.ShaderMaterial({\n        uniforms: {\n            uTexture: {\n                value: null\n            },\n            uTau: {\n                value: 0.8\n            }\n        },\n        vertexShader: `varying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}`,\n        fragmentShader: document.getElementById(\"collision\").innerHTML\n    });\n    $17ea8e9e22e211a7$var$shadersDict[\"collisionShader\"] = collisionShader;\n    const streamingShader = new $ilwiq.ShaderMaterial({\n        uniforms: {\n            uTexture: {\n                value: null\n            }\n        },\n        // vertexShader: `...`,\n        fragmentShader: document.getElementById(\"streaming\").innerHTML // Your LBM streaming step logic\n    });\n    $17ea8e9e22e211a7$var$shadersDict[\"streamingShader\"] = streamingShader;\n    const visualizationShader = new $ilwiq.ShaderMaterial({\n        uniforms: {\n            uTexture: {\n                value: null\n            }\n        },\n        vertexShader: `varying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}`,\n        // fragmentShader: document.getElementById('streaming').innerHTML // Your LBM streaming step logic\n        fragmentShader: `\r\nuniform sampler2D uTexture;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    // Retrieve the distribution functions (stored in RGBA channels)\r\n    vec4 f = texture2D(uTexture, vUv);\r\n\r\n    // Compute the density (sum of all distribution functions)\r\n    float density = 0.0;\r\n    for ( int i = -1; i <= 1; ++i ) {\r\n        for ( int j = -1; j <= 1; ++j ) {\r\n            vec2 pos = vUv + vec2(float(i), float(j));\r\n            vec4 colorsIJ = texture2D(uTexture, pos); \r\n            density += colorsIJ.r;\r\n        }\r\n    }\r\n\r\n    // if(f.b < 0.5){\r\n    //     // Visualize the density as grayscale (for simplicity)\r\n    //     vec3 color = vec3(density, density, density); // Grayscale color\r\n\r\n    //     gl_FragColor = vec4(color, 1.0); // Output the final color\r\n    // }else{\r\n    gl_FragColor = f;\r\n    // }\r\n}\r\n`\n    });\n    $17ea8e9e22e211a7$var$shadersDict[\"visualizationShader\"] = visualizationShader;\n}\n$17ea8e9e22e211a7$var$setupShaders();\nfunction $17ea8e9e22e211a7$var$simulateSingleShader(name) {\n    //run shader\n    let shader = $17ea8e9e22e211a7$var$shadersDict[name];\n    $17ea8e9e22e211a7$var$bufferMesh.material = shader; // here is where we dynamically assign the material\n    shader.uniforms.uTexture.value = $17ea8e9e22e211a7$var$currentRT.texture;\n    //render to buffer scene\n    $17ea8e9e22e211a7$var$renderer.setRenderTarget($17ea8e9e22e211a7$var$nextRT);\n    $17ea8e9e22e211a7$var$renderer.render($17ea8e9e22e211a7$var$bufferScene, $17ea8e9e22e211a7$var$camera);\n    //swap buffers\n    [$17ea8e9e22e211a7$var$currentRT, $17ea8e9e22e211a7$var$nextRT] = [\n        $17ea8e9e22e211a7$var$nextRT,\n        $17ea8e9e22e211a7$var$currentRT\n    ];\n}\nfunction $17ea8e9e22e211a7$var$simulateAll() {\n    // simulateSingleShader(\"shaderMultiply\");\n    $17ea8e9e22e211a7$var$simulateSingleShader(\"shaderInvert\");\n    // simulateSingleShader(\"boundaryShader\"); //doesn't work.\n    // simulateSingleShader(\"collisionShader\"); // doesn't work.\n    // simulateSingleShader(\"streamingShader\"); // doesn't work.\n    $17ea8e9e22e211a7$var$simulateSingleShader(\"visualizationShader\");\n//final output in currentRT since the last target was nextRT and it's data was moved to currentRT\n}\nfunction $17ea8e9e22e211a7$var$visualize() {\n    let shader = $17ea8e9e22e211a7$var$shadersDict[\"visualizationShader\"];\n    $17ea8e9e22e211a7$var$displayMesh.material = shader;\n    shader.uniforms.uTexture.value = $17ea8e9e22e211a7$var$currentRT.texture;\n}\nfunction $17ea8e9e22e211a7$var$displayInitial() {\n    $17ea8e9e22e211a7$var$visualize();\n    // reset to screen framebuffer.\n    $17ea8e9e22e211a7$var$renderer.setRenderTarget(null);\n    $17ea8e9e22e211a7$var$renderer.render($17ea8e9e22e211a7$var$displayScene, $17ea8e9e22e211a7$var$camera);\n}\n$17ea8e9e22e211a7$var$displayInitial();\nfunction $17ea8e9e22e211a7$var$render() {\n    $17ea8e9e22e211a7$var$stats.begin();\n    if ($17ea8e9e22e211a7$var$params.isSimRunning) {\n        $17ea8e9e22e211a7$var$simulateAll();\n        $17ea8e9e22e211a7$var$displayMesh.material.map = $17ea8e9e22e211a7$var$currentRT.texture;\n        // reset to screen framebuffer.\n        $17ea8e9e22e211a7$var$renderer.setRenderTarget(null);\n        $17ea8e9e22e211a7$var$renderer.render($17ea8e9e22e211a7$var$displayScene, $17ea8e9e22e211a7$var$camera);\n        if ($17ea8e9e22e211a7$var$params.isSingleStep == true) {\n            $17ea8e9e22e211a7$var$params.isSimRunning = false;\n            $17ea8e9e22e211a7$var$params.isSingleStep = false;\n        }\n    }\n    $17ea8e9e22e211a7$var$stats.end();\n    requestAnimationFrame($17ea8e9e22e211a7$var$render);\n}\n$17ea8e9e22e211a7$var$render();\n\n\n//# sourceMappingURL=sim.a0b4edd0.js.map\n","/////////////\r\n///// Although multiple rendertargets do not work, this should allow you to see the general set-up \r\n///// for shaders through rendertargets with single outputs. Currently only the visualization shader, \r\n///// the invert shader, and the multiply shader work. \r\n///// The tests for multiple rendertargets are not included within this file since we reverted an\r\n///// earlier version where we were testing with single rendertargets.\r\n/////////////\r\n\r\nimport * as THREE from 'three';\r\nimport Stats from 'stats.js';\r\nimport GUI from 'lil-gui';\r\n\r\n////////////\r\n/// Set up for stats\r\n////////////\r\nvar stats;\r\n\r\nfunction setupStats() {\r\n    stats = new Stats();\r\n    stats.setMode(0);\r\n    stats.domElement.style.position = \"absolute\";\r\n    stats.domElement.style.left = \"150px\";\r\n    stats.domElement.style.top = \"200px\";\r\n    document.body.appendChild(stats.domElement);\r\n}\r\n\r\nsetupStats();\r\n\r\nfunction getRenderWidth() {\r\n    return window.innerWidth; // Adjust based on your needs\r\n}\r\n\r\nfunction getRenderHeight() {\r\n    return window.innerHeight; // Adjust based on your needs\r\n}\r\n\r\n////////////////////////\r\n/// global params\r\n////////////////////////\r\nconst geoWidth = 2;\r\nconst geoHeight = 2;\r\nconst resolution = 128; // Adjust resolution as needed\r\n\r\nconst params = {\r\n    isSimRunning: false,\r\n    step : function(){\r\n        params.isSimRunning = true;\r\n        params.isSingleStep = true;\r\n    }\r\n}\r\n\r\nconst gui = new GUI();\r\n\r\ngui.add( params, 'isSimRunning' );\r\ngui.add( params, 'step' );\r\ngui.open();\r\n\r\n////////////////////////\r\n/// Set up scene(main and buffer), camera, and renderer\r\n////////////////////////\r\nvar camera;\r\nvar renderer;\r\nvar geo;\r\n\r\nvar displayScene;\r\nvar displayMaterial;\r\nvar displayMesh;\r\n\r\nvar bufferScene;\r\n// var bufferMaterial;\r\nvar bufferMesh;\r\n\r\nvar rt1;\r\nvar rt2;\r\nvar currentRT;\r\nvar nextRT;\r\nvar boundaryTexture;\r\nfunction createBoundaryMask(){\r\n    const width = resolution;\r\n    const height = resolution;\r\n    const data = new Float32Array(width * height * 4);\r\n\r\n    // Set edge pixels to blue (R = 0, G = 0, B = 1, A = 1)\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            const index = (y * width + x) * 4;\r\n            \r\n            // Left edge (x = 0)\r\n            if (x === 0) {\r\n                data[index] = 0;     // Red\r\n                data[index + 1] = 0; // Green\r\n                data[index + 2] = 1; // Blue\r\n                data[index + 3] = 1; // Alpha\r\n            }\r\n            // Right edge (x = width - 1)\r\n            else if (x === width - 1) {\r\n                data[index] = 0;     // Red\r\n                data[index + 1] = 0; // Green\r\n                data[index + 2] = 1; // Blue\r\n                data[index + 3] = 1; // Alpha\r\n            }\r\n            // Top edge (y = 0)\r\n            else if (y === 0) {\r\n                data[index] = 0;     // Red\r\n                data[index + 1] = 0; // Green\r\n                data[index + 2] = 1; // Blue\r\n                data[index + 3] = 1; // Alpha\r\n            }\r\n            // Bottom edge (y = height - 1)\r\n            else if (y === height - 1) {\r\n                data[index] = 0;     // Red\r\n                data[index + 1] = 0; // Green\r\n                data[index + 2] = 1; // Blue\r\n                data[index + 3] = 1; // Alpha\r\n            }\r\n        }\r\n    }\r\n\r\n    const texture = new THREE.DataTexture(data, width, height, THREE.RGBAFormat, THREE.FloatType);\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n}\r\n\r\nfunction createInitialTexture() {\r\n    const width = resolution;\r\n    const height = resolution;\r\n\r\n    const data = new Float32Array(width * height * 4);  // RGBA for each pixel\r\n\r\n    // Create the initial texture (red color)\r\n    for (let i = 0; i < width * height; i++) {\r\n        data[i * 4 + 0] = Math.random();  // Red channel\r\n        data[i * 4 + 1] = 0.0;  // Green channel\r\n        data[i * 4 + 2] = 0.0;  // Blue channel\r\n        data[i * 4 + 3] = 1.0;  // Alpha channel (opaque)\r\n    }\r\n\r\n    // Create the boundary texture (this assumes createBoundaryMask() is defined already)\r\n    const boundaryTexture = createBoundaryMask();\r\n\r\n    // Overlay boundary texture onto initial texture\r\n    const boundaryData = boundaryTexture.image.data;\r\n\r\n    for (let i = 0; i < width * height; i++) {\r\n        const index = i * 4;\r\n\r\n        const r1 = data[index + 0];  // Initial Red\r\n        const g1 = data[index + 1];  // Initial Green\r\n        const b1 = data[index + 2];  // Initial Blue\r\n        const a1 = data[index + 3];  // Initial Alpha\r\n\r\n        const r2 = boundaryData[index + 0];  // Boundary Red\r\n        const g2 = boundaryData[index + 1];  // Boundary Green\r\n        const b2 = boundaryData[index + 2];  // Boundary Blue\r\n        const a2 = boundaryData[index + 3];  // Boundary Alpha\r\n\r\n        // Simple blending, using boundary texture's alpha channel for interpolation\r\n        const alpha = a2; // You can modify this if you want a different blend effect\r\n\r\n        // Blend the colors\r\n        data[index + 0] = r1 * (1 - alpha) + r2 * alpha;  // Red channel blend\r\n        data[index + 1] = g1 * (1 - alpha) + g2 * alpha;  // Green channel blend\r\n        data[index + 2] = b1 * (1 - alpha) + b2 * alpha;  // Blue channel blend\r\n        data[index + 3] = a1 * (1 - alpha) + a2 * alpha;  // Alpha channel blend\r\n    }\r\n\r\n    const combined = new Float32Array(data.length * 2);\r\n    combined.set(data);\r\n    combined.set(data, data.length);\r\n\r\n    const texture = new THREE.DataTexture(data, width, height, THREE.RGBAFormat, THREE.FloatType);\r\n    texture.needsUpdate = true;\r\n\r\n    return texture;\r\n}\r\n\r\n\r\nfunction setupScene() { \r\n    // same across scenes\r\n    renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('fluidCanvas') });\r\n    const size = Math.min(getRenderWidth(), getRenderHeight());\r\n    renderer.setSize(size, size);\r\n    renderer.setClearColor('black', 1)\r\n\r\n    camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 1, 1000); //vars: left right top bottom near far //TODO: might need to change camera width and heigh to screen width and height. update those every frame if so.\r\n    camera.position.z = 2;\r\n\r\n    geo = new THREE.PlaneGeometry(geoWidth, geoHeight);\r\n\r\n    //display scene stuff\r\n    displayScene = new THREE.Scene();\r\n    displayMaterial = new THREE.MeshBasicMaterial({ map: null }); // map will be replaced w the right texture later\r\n    displayMesh = new THREE.Mesh(geo, displayMaterial)\r\n    displayScene.add(displayMesh);\r\n\r\n    //buffer stuff  \r\n    bufferScene = new THREE.Scene();\r\n    //no buffer material because we'll assign it dynamically\r\n    bufferMesh = new THREE.Mesh(geo, null);\r\n    bufferScene.add(bufferMesh);\r\n\r\n    rt1 = new THREE.WebGLRenderTarget(resolution, resolution, {\r\n        format: THREE.RGBAFormat,\r\n        type: THREE.FloatType, // Use FloatType for simulations\r\n        magFilter: THREE.LinearFilter,\r\n        minFilter: THREE.LinearFilter\r\n    });\r\n\r\n    rt2 = new THREE.WebGLRenderTarget(resolution, resolution, {\r\n        format: THREE.RGBAFormat,\r\n        type: THREE.FloatType,\r\n        magFilter: THREE.LinearFilter,\r\n        minFilter: THREE.LinearFilter\r\n    });\r\n\r\n    rt1.texture = createInitialTexture();\r\n\r\n    currentRT = rt1;\r\n    nextRT = rt2;\r\n}\r\nsetupScene();\r\n\r\n////////////////////////\r\n/// Set up shaders\r\n////////////////////////\r\n\r\n// var vertexShader;\r\nvar shadersDict = {};\r\n\r\nfunction setupShaders(){\r\n    const shaderMultiply = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            uTexture: { value: null },\r\n        },\r\n        fragmentShader: `uniform image2D uTexture;\r\n\r\n\t\tvoid main() {\r\n\t\t\tvec4 color = texture2D(uTexture, gl_FragCoord.xy / vec2(128, 128));\r\n\t\t\tgl_FragColor = color * vec4(0.5, 1.0, 0.5, 1.0); // Multiply color by greenish color\r\n\t\t}`\r\n    });\r\n    shadersDict[\"shaderMultiply\"] = shaderMultiply;\r\n\r\n    const shaderInvert = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            uTexture: { value: null },\r\n        },\r\n        fragmentShader: document.getElementById('invert').innerHTML\r\n    });\r\n    shadersDict[\"shaderInvert\"] = shaderInvert;\r\n\r\n    const boundaryShader = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            uTexture: { value: null },\r\n            uBoundary: { value: boundaryTexture}\r\n            // Add more uniforms for velocity, density, etc.\r\n        },\r\n        vertexShader: `varying vec2 vUv;\r\n        void main() {\r\n            vUv = uv;\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n        }`,\r\n        fragmentShader: document.getElementById('boundary').innerHTML\r\n    });\r\n    shadersDict[\"boundaryShader\"] = boundaryShader;\r\n\r\n    const collisionShader = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            uTexture: { value: null },\r\n            uTau: { value: 0.8 }\r\n            // Add more uniforms for velocity, density, etc.\r\n        },\r\n        vertexShader: `varying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}`,\r\n        fragmentShader: document.getElementById('collision').innerHTML\r\n    });\r\n    shadersDict[\"collisionShader\"] = collisionShader;\r\n\r\n\r\n    const streamingShader = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            uTexture: { value: null },\r\n        },\r\n        // vertexShader: `...`,\r\n        fragmentShader: document.getElementById('streaming').innerHTML // Your LBM streaming step logic\r\n    });\r\n    shadersDict[\"streamingShader\"] = streamingShader;\r\n\r\n    const visualizationShader = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            uTexture: { value: null },\r\n        },\r\n        vertexShader: `varying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}`,\r\n        // fragmentShader: document.getElementById('streaming').innerHTML // Your LBM streaming step logic\r\n        fragmentShader: `\r\nuniform sampler2D uTexture;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    // Retrieve the distribution functions (stored in RGBA channels)\r\n    vec4 f = texture2D(uTexture, vUv);\r\n\r\n    // Compute the density (sum of all distribution functions)\r\n    float density = 0.0;\r\n    for ( int i = -1; i <= 1; ++i ) {\r\n        for ( int j = -1; j <= 1; ++j ) {\r\n            vec2 pos = vUv + vec2(float(i), float(j));\r\n            vec4 colorsIJ = texture2D(uTexture, pos); \r\n            density += colorsIJ.r;\r\n        }\r\n    }\r\n\r\n    // if(f.b < 0.5){\r\n    //     // Visualize the density as grayscale (for simplicity)\r\n    //     vec3 color = vec3(density, density, density); // Grayscale color\r\n\r\n    //     gl_FragColor = vec4(color, 1.0); // Output the final color\r\n    // }else{\r\n    gl_FragColor = f;\r\n    // }\r\n}\r\n`\r\n    });\r\n    shadersDict[\"visualizationShader\"] = visualizationShader;\r\n}\r\nsetupShaders();\r\n\r\nfunction simulateSingleShader(name){\r\n    //run shader\r\n    let shader = shadersDict[name]\r\n    bufferMesh.material = shader; // here is where we dynamically assign the material\r\n    shader.uniforms.uTexture.value = currentRT.texture; \r\n\r\n    //render to buffer scene\r\n    renderer.setRenderTarget(nextRT);\r\n    renderer.render(bufferScene, camera);\r\n\r\n    //swap buffers\r\n    [currentRT, nextRT] = [nextRT, currentRT];\r\n}\r\n\r\nfunction simulateAll(){\r\n    // simulateSingleShader(\"shaderMultiply\");\r\n    simulateSingleShader(\"shaderInvert\");\r\n\r\n    // simulateSingleShader(\"boundaryShader\"); //doesn't work.\r\n    // simulateSingleShader(\"collisionShader\"); // doesn't work.\r\n    // simulateSingleShader(\"streamingShader\"); // doesn't work.\r\n    simulateSingleShader(\"visualizationShader\");\r\n    \r\n    //final output in currentRT since the last target was nextRT and it's data was moved to currentRT\r\n}\r\n\r\nfunction visualize(){\r\n    let shader = shadersDict[\"visualizationShader\"];\r\n    displayMesh.material = shader;\r\n    shader.uniforms.uTexture.value = currentRT.texture;\r\n\r\n}\r\n\r\nfunction displayInitial(){\r\n    visualize();\r\n    // reset to screen framebuffer.\r\n    renderer.setRenderTarget(null);\r\n    renderer.render(displayScene, camera);\r\n}\r\ndisplayInitial();\r\n\r\nfunction render() {\r\n    stats.begin();\r\n\r\n    if(params.isSimRunning){\r\n        simulateAll();\r\n\r\n        displayMesh.material.map = currentRT.texture;\r\n\r\n        // reset to screen framebuffer.\r\n        renderer.setRenderTarget(null);\r\n        renderer.render(displayScene, camera);\r\n\r\n        if(params.isSingleStep == true){\r\n            params.isSimRunning = false;\r\n            params.isSingleStep = false;\r\n        }\r\n    }\r\n\r\n    stats.end();\r\n    requestAnimationFrame(render);\r\n\r\n}\r\nrender();\r\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.20.0\n * @author George Michael Brower\n * @license MIT\n */\n\n/**\n * Base class for all controllers.\n */\nclass Controller {\n\n\tconstructor( parent, object, property, className, elementType = 'div' ) {\n\n\t\t/**\n\t\t * The GUI that contains this controller.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The object this controller will modify.\n\t\t * @type {object}\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * The name of the property to control.\n\t\t * @type {string}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * Used to determine if the controller is disabled.\n\t\t * Use `controller.disable( true|false )` to modify this value.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._disabled = false;\n\n\t\t/**\n\t\t * Used to determine if the Controller is hidden.\n\t\t * Use `controller.show()` or `controller.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The value of `object[ property ]` when the controller was created.\n\t\t * @type {any}\n\t\t */\n\t\tthis.initialValue = this.getValue();\n\n\t\t/**\n\t\t * The outermost container DOM element for this controller.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( elementType );\n\t\tthis.domElement.classList.add( 'controller' );\n\t\tthis.domElement.classList.add( className );\n\n\t\t/**\n\t\t * The DOM element that contains the controller's name.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$name = document.createElement( 'div' );\n\t\tthis.$name.classList.add( 'name' );\n\n\t\tController.nextNameID = Controller.nextNameID || 0;\n\t\tthis.$name.id = `lil-gui-name-${++Controller.nextNameID}`;\n\n\t\t/**\n\t\t * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$widget = document.createElement( 'div' );\n\t\tthis.$widget.classList.add( 'widget' );\n\n\t\t/**\n\t\t * The DOM element that receives the disabled attribute when using disable().\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$disable = this.$widget;\n\n\t\tthis.domElement.appendChild( this.$name );\n\t\tthis.domElement.appendChild( this.$widget );\n\n\t\t// Don't fire global key events while typing in a controller\n\t\tthis.domElement.addEventListener( 'keydown', e => e.stopPropagation() );\n\t\tthis.domElement.addEventListener( 'keyup', e => e.stopPropagation() );\n\n\t\tthis.parent.children.push( this );\n\t\tthis.parent.controllers.push( this );\n\n\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\tthis._listenCallback = this._listenCallback.bind( this );\n\n\t\tthis.name( property );\n\n\t}\n\n\t/**\n\t * Sets the name of the controller and its label in the GUI.\n\t * @param {string} name\n\t * @returns {this}\n\t */\n\tname( name ) {\n\t\t/**\n\t\t * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._name = name;\n\t\tthis.$name.textContent = name;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever the value is modified by this controller.\n\t * The function receives the new value as its first parameter. The value of `this` will be the\n\t * controller.\n\t *\n\t * For function controllers, the `onChange` callback will be fired on click, after the function\n\t * executes.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onChange( function( v ) {\n\t * \tconsole.log( 'The value is now ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value directly.\n\t\t * Use the `controller.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls the onChange methods of this controller and its parent GUI.\n\t * @protected\n\t */\n\t_callOnChange() {\n\n\t\tthis.parent._callOnChange( this );\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, this.getValue() );\n\t\t}\n\n\t\tthis._changed = true;\n\n\t}\n\n\t/**\n\t * Pass a function to be called after this controller has been modified and loses focus.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onFinishChange( function( v ) {\n\t * \tconsole.log( 'Changes complete: ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `controller.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Should be called by Controller when its widgets lose focus.\n\t * @protected\n\t */\n\t_callOnFinishChange() {\n\n\t\tif ( this._changed ) {\n\n\t\t\tthis.parent._callOnFinishChange( this );\n\n\t\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\t\tthis._onFinishChange.call( this, this.getValue() );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._changed = false;\n\n\t}\n\n\t/**\n\t * Sets the controller back to its initial value.\n\t * @returns {this}\n\t */\n\treset() {\n\t\tthis.setValue( this.initialValue );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables this controller.\n\t * @param {boolean} enabled\n\t * @returns {this}\n\t * @example\n\t * controller.enable();\n\t * controller.enable( false ); // disable\n\t * controller.enable( controller._disabled ); // toggle\n\t */\n\tenable( enabled = true ) {\n\t\treturn this.disable( !enabled );\n\t}\n\n\t/**\n\t * Disables this controller.\n\t * @param {boolean} disabled\n\t * @returns {this}\n\t * @example\n\t * controller.disable();\n\t * controller.disable( false ); // enable\n\t * controller.disable( !controller._disabled ); // toggle\n\t */\n\tdisable( disabled = true ) {\n\n\t\tif ( disabled === this._disabled ) return this;\n\n\t\tthis._disabled = disabled;\n\n\t\tthis.domElement.classList.toggle( 'disabled', disabled );\n\t\tthis.$disable.toggleAttribute( 'disabled', disabled );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Shows the Controller after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * controller.show();\n\t * controller.show( false ); // hide\n\t * controller.show( controller._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the Controller.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\t/**\n\t * Changes this controller into a dropdown of options.\n\t *\n\t * Calling this method on an option controller will simply update the options. However, if this\n\t * controller was not already an option controller, old references to this controller are\n\t * destroyed, and a new controller is added to the end of the GUI.\n\t * @example\n\t * // safe usage\n\t *\n\t * gui.add( obj, 'prop1' ).options( [ 'a', 'b', 'c' ] );\n\t * gui.add( obj, 'prop2' ).options( { Big: 10, Small: 1 } );\n\t * gui.add( obj, 'prop3' );\n\t *\n\t * // danger\n\t *\n\t * const ctrl1 = gui.add( obj, 'prop1' );\n\t * gui.add( obj, 'prop2' );\n\t *\n\t * // calling options out of order adds a new controller to the end...\n\t * const ctrl2 = ctrl1.options( [ 'a', 'b', 'c' ] );\n\t *\n\t * // ...and ctrl1 now references a controller that doesn't exist\n\t * assert( ctrl2 !== ctrl1 )\n\t * @param {object|Array} options\n\t * @returns {Controller}\n\t */\n\toptions( options ) {\n\t\tconst controller = this.parent.add( this.object, this.property, options );\n\t\tcontroller.name( this._name );\n\t\tthis.destroy();\n\t\treturn controller;\n\t}\n\n\t/**\n\t * Sets the minimum value. Only works on number controllers.\n\t * @param {number} min\n\t * @returns {this}\n\t */\n\tmin( min ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum value. Only works on number controllers.\n\t * @param {number} max\n\t * @returns {this}\n\t */\n\tmax( max ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Values set by this controller will be rounded to multiples of `step`. Only works on number\n\t * controllers.\n\t * @param {number} step\n\t * @returns {this}\n\t */\n\tstep( step ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Rounds the displayed value to a fixed number of decimals, without affecting the actual value\n\t * like `step()`. Only works on number controllers.\n\t * @example\n\t * gui.add( object, 'property' ).listen().decimals( 4 );\n\t * @param {number} decimals\n\t * @returns {this}\n\t */\n\tdecimals( decimals ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n\t * @param {boolean} listen\n\t * @returns {this}\n\t */\n\tlisten( listen = true ) {\n\n\t\t/**\n\t\t * Used to determine if the controller is currently listening. Don't modify this value\n\t\t * directly. Use the `controller.listen( true|false )` method instead.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._listening = listen;\n\n\t\tif ( this._listenCallbackID !== undefined ) {\n\t\t\tcancelAnimationFrame( this._listenCallbackID );\n\t\t\tthis._listenCallbackID = undefined;\n\t\t}\n\n\t\tif ( this._listening ) {\n\t\t\tthis._listenCallback();\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_listenCallback() {\n\n\t\tthis._listenCallbackID = requestAnimationFrame( this._listenCallback );\n\n\t\t// To prevent framerate loss, make sure the value has changed before updating the display.\n\t\t// Note: save() is used here instead of getValue() only because of ColorController. The !== operator\n\t\t// won't work for color objects or arrays, but ColorController.save() always returns a string.\n\n\t\tconst curValue = this.save();\n\n\t\tif ( curValue !== this._listenPrevValue ) {\n\t\t\tthis.updateDisplay();\n\t\t}\n\n\t\tthis._listenPrevValue = curValue;\n\n\t}\n\n\t/**\n\t * Returns `object[ property ]`.\n\t * @returns {any}\n\t */\n\tgetValue() {\n\t\treturn this.object[ this.property ];\n\t}\n\n\t/**\n\t * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n\t * @param {any} value\n\t * @returns {this}\n\t */\n\tsetValue( value ) {\n\n\t\tif ( this.getValue() !== value ) {\n\n\t\t\tthis.object[ this.property ] = value;\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Updates the display to keep it in sync with the current value. Useful for updating your\n\t * controllers when their values have been modified outside of the GUI.\n\t * @returns {this}\n\t */\n\tupdateDisplay() {\n\t\treturn this;\n\t}\n\n\tload( value ) {\n\t\tthis.setValue( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tsave() {\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Destroys this controller and removes it from the parent GUI.\n\t */\n\tdestroy() {\n\t\tthis.listen( false );\n\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\tthis.parent.controllers.splice( this.parent.controllers.indexOf( this ), 1 );\n\t\tthis.parent.$children.removeChild( this.domElement );\n\t}\n\n}\n\nclass BooleanController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'boolean', 'label' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'checkbox' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$input.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this.$input.checked );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.checked = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nfunction normalizeColorString( string ) {\n\n\tlet match, result;\n\n\tif ( match = string.match( /(#|0x)?([a-f0-9]{6})/i ) ) {\n\n\t\tresult = match[ 2 ];\n\n\t} else if ( match = string.match( /rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/ ) ) {\n\n\t\tresult = parseInt( match[ 1 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 2 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 3 ] ).toString( 16 ).padStart( 2, 0 );\n\n\t} else if ( match = string.match( /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i ) ) {\n\n\t\tresult = match[ 1 ] + match[ 1 ] + match[ 2 ] + match[ 2 ] + match[ 3 ] + match[ 3 ];\n\n\t}\n\n\tif ( result ) {\n\t\treturn '#' + result;\n\t}\n\n\treturn false;\n\n}\n\nconst STRING = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'string',\n\tfromHexString: normalizeColorString,\n\ttoHexString: normalizeColorString\n};\n\nconst INT = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'number',\n\tfromHexString: string => parseInt( string.substring( 1 ), 16 ),\n\ttoHexString: value => '#' + value.toString( 16 ).padStart( 6, 0 )\n};\n\nconst ARRAY = {\n\tisPrimitive: false,\n\n\t// The arrow function is here to appease tree shakers like esbuild or webpack.\n\t// See https://esbuild.github.io/api/#tree-shaking\n\tmatch: v => Array.isArray( v ),\n\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget[ 0 ] = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 1 ] = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 2 ] = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( [ r, g, b ], rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst OBJECT = {\n\tisPrimitive: false,\n\tmatch: v => Object( v ) === v,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget.r = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget.g = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget.b = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( { r, g, b }, rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst FORMATS = [ STRING, INT, ARRAY, OBJECT ];\n\nfunction getColorFormat( value ) {\n\treturn FORMATS.find( format => format.match( value ) );\n}\n\nclass ColorController extends Controller {\n\n\tconstructor( parent, object, property, rgbScale ) {\n\n\t\tsuper( parent, object, property, 'color' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'color' );\n\t\tthis.$input.setAttribute( 'tabindex', -1 );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$text = document.createElement( 'input' );\n\t\tthis.$text.setAttribute( 'type', 'text' );\n\t\tthis.$text.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$text.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$display.appendChild( this.$input );\n\t\tthis.$widget.appendChild( this.$display );\n\t\tthis.$widget.appendChild( this.$text );\n\n\t\tthis._format = getColorFormat( this.initialValue );\n\t\tthis._rgbScale = rgbScale;\n\n\t\tthis._initialValueHexString = this.save();\n\t\tthis._textFocused = false;\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis._setValueFromHexString( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'input', () => {\n\t\t\tconst tryParse = normalizeColorString( this.$text.value );\n\t\t\tif ( tryParse ) {\n\t\t\t\tthis._setValueFromHexString( tryParse );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'focus', () => {\n\t\t\tthis._textFocused = true;\n\t\t\tthis.$text.select();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'blur', () => {\n\t\t\tthis._textFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$text;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\treset() {\n\t\tthis._setValueFromHexString( this._initialValueHexString );\n\t\treturn this;\n\t}\n\n\t_setValueFromHexString( value ) {\n\n\t\tif ( this._format.isPrimitive ) {\n\n\t\t\tconst newValue = this._format.fromHexString( value );\n\t\t\tthis.setValue( newValue );\n\n\t\t} else {\n\n\t\t\tthis._format.fromHexString( value, this.getValue(), this._rgbScale );\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\tsave() {\n\t\treturn this._format.toHexString( this.getValue(), this._rgbScale );\n\t}\n\n\tload( value ) {\n\t\tthis._setValueFromHexString( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this._format.toHexString( this.getValue(), this._rgbScale );\n\t\tif ( !this._textFocused ) {\n\t\t\tthis.$text.value = this.$input.value.substring( 1 );\n\t\t}\n\t\tthis.$display.style.backgroundColor = this.$input.value;\n\t\treturn this;\n\t}\n\n}\n\nclass FunctionController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'function' );\n\n\t\t// Buttons are the only case where widget contains name\n\t\tthis.$button = document.createElement( 'button' );\n\t\tthis.$button.appendChild( this.$name );\n\t\tthis.$widget.appendChild( this.$button );\n\n\t\tthis.$button.addEventListener( 'click', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.getValue().call( this.object );\n\t\t\tthis._callOnChange();\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$button.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\tthis.$disable = this.$button;\n\n\t}\n\n}\n\nclass NumberController extends Controller {\n\n\tconstructor( parent, object, property, min, max, step ) {\n\n\t\tsuper( parent, object, property, 'number' );\n\n\t\tthis._initInput();\n\n\t\tthis.min( min );\n\t\tthis.max( max );\n\n\t\tconst stepExplicit = step !== undefined;\n\t\tthis.step( stepExplicit ? step : this._getImplicitStep(), stepExplicit );\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tdecimals( decimals ) {\n\t\tthis._decimals = decimals;\n\t\tthis.updateDisplay();\n\t\treturn this;\n\t}\n\n\tmin( min ) {\n\t\tthis._min = min;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tmax( max ) {\n\t\tthis._max = max;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tstep( step, explicit = true ) {\n\t\tthis._step = step;\n\t\tthis._stepExplicit = explicit;\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\n\t\tconst value = this.getValue();\n\n\t\tif ( this._hasSlider ) {\n\n\t\t\tlet percent = ( value - this._min ) / ( this._max - this._min );\n\t\t\tpercent = Math.max( 0, Math.min( percent, 1 ) );\n\n\t\t\tthis.$fill.style.width = percent * 100 + '%';\n\n\t\t}\n\n\t\tif ( !this._inputFocused ) {\n\t\t\tthis.$input.value = this._decimals === undefined ? value : value.toFixed( this._decimals );\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_initInput() {\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\t// On touch devices only, use input[type=number] to force a numeric keyboard.\n\t\t// Ideally we could use one input type everywhere, but [type=number] has quirks\n\t\t// on desktop, and [inputmode=decimal] has quirks on iOS.\n\t\t// See https://github.com/georgealways/lil-gui/pull/16\n\n\t\tconst isTouch = window.matchMedia( '(pointer: coarse)' ).matches;\n\n\t\tif ( isTouch ) {\n\t\t\tthis.$input.setAttribute( 'type', 'number' );\n\t\t\tthis.$input.setAttribute( 'step', 'any' );\n\t\t}\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tconst onInput = () => {\n\n\t\t\tlet value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tif ( this._stepExplicit ) {\n\t\t\t\tvalue = this._snap( value );\n\t\t\t}\n\n\t\t\tthis.setValue( this._clamp( value ) );\n\n\t\t};\n\n\t\t// Keys & mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst increment = delta => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis._snapClampSetValue( value + delta );\n\n\t\t\t// Force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t};\n\n\t\tconst onKeyDown = e => {\n\t\t\t// Using `e.key` instead of `e.code` also catches NumpadEnter\n\t\t\tif ( e.key === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowUp' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) );\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowDown' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) * -1 );\n\t\t\t}\n\t\t};\n\n\t\tconst onWheel = e => {\n\t\t\tif ( this._inputFocused ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._normalizeMouseWheel( e ) );\n\t\t\t}\n\t\t};\n\n\t\t// Vertical drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForVerticalDrag = false,\n\t\t\tinitClientX,\n\t\t\tinitClientY,\n\t\t\tprevClientY,\n\t\t\tinitValue,\n\t\t\tdragDelta;\n\n\t\t// Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n\t\t// on the user's intent: horizontal means highlight, vertical means drag.\n\t\tconst DRAG_THRESH = 5;\n\n\t\tconst onMouseDown = e => {\n\n\t\t\tinitClientX = e.clientX;\n\t\t\tinitClientY = prevClientY = e.clientY;\n\t\t\ttestingForVerticalDrag = true;\n\n\t\t\tinitValue = this.getValue();\n\t\t\tdragDelta = 0;\n\n\t\t\twindow.addEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.addEventListener( 'mouseup', onMouseUp );\n\n\t\t};\n\n\t\tconst onMouseMove = e => {\n\n\t\t\tif ( testingForVerticalDrag ) {\n\n\t\t\t\tconst dx = e.clientX - initClientX;\n\t\t\t\tconst dy = e.clientY - initClientY;\n\n\t\t\t\tif ( Math.abs( dy ) > DRAG_THRESH ) {\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.$input.blur();\n\t\t\t\t\ttestingForVerticalDrag = false;\n\t\t\t\t\tthis._setDraggingStyle( true, 'vertical' );\n\n\t\t\t\t} else if ( Math.abs( dx ) > DRAG_THRESH ) {\n\n\t\t\t\t\tonMouseUp();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// This isn't an else so that the first move counts towards dragDelta\n\t\t\tif ( !testingForVerticalDrag ) {\n\n\t\t\t\tconst dy = e.clientY - prevClientY;\n\n\t\t\t\tdragDelta -= dy * this._step * this._arrowKeyMultiplier( e );\n\n\t\t\t\t// Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n\t\t\t\t// We're okay with the fact that bounds can be undefined here.\n\t\t\t\tif ( initValue + dragDelta > this._max ) {\n\t\t\t\t\tdragDelta = this._max - initValue;\n\t\t\t\t} else if ( initValue + dragDelta < this._min ) {\n\t\t\t\t\tdragDelta = this._min - initValue;\n\t\t\t\t}\n\n\t\t\t\tthis._snapClampSetValue( initValue + dragDelta );\n\n\t\t\t}\n\n\t\t\tprevClientY = e.clientY;\n\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis._setDraggingStyle( false, 'vertical' );\n\t\t\tthis._callOnFinishChange();\n\t\t\twindow.removeEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', onMouseUp );\n\t\t};\n\n\t\t// Focus state & onFinishChange\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst onFocus = () => {\n\t\t\tthis._inputFocused = true;\n\t\t};\n\n\t\tconst onBlur = () => {\n\t\t\tthis._inputFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t};\n\n\t\tthis.$input.addEventListener( 'input', onInput );\n\t\tthis.$input.addEventListener( 'keydown', onKeyDown );\n\t\tthis.$input.addEventListener( 'wheel', onWheel, { passive: false } );\n\t\tthis.$input.addEventListener( 'mousedown', onMouseDown );\n\t\tthis.$input.addEventListener( 'focus', onFocus );\n\t\tthis.$input.addEventListener( 'blur', onBlur );\n\n\t}\n\n\t_initSlider() {\n\n\t\tthis._hasSlider = true;\n\n\t\t// Build DOM\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis.$slider = document.createElement( 'div' );\n\t\tthis.$slider.classList.add( 'slider' );\n\n\t\tthis.$fill = document.createElement( 'div' );\n\t\tthis.$fill.classList.add( 'fill' );\n\n\t\tthis.$slider.appendChild( this.$fill );\n\t\tthis.$widget.insertBefore( this.$slider, this.$input );\n\n\t\tthis.domElement.classList.add( 'hasSlider' );\n\n\t\t// Map clientX to value\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst map = ( v, a, b, c, d ) => {\n\t\t\treturn ( v - a ) / ( b - a ) * ( d - c ) + c;\n\t\t};\n\n\t\tconst setValueFromX = clientX => {\n\t\t\tconst rect = this.$slider.getBoundingClientRect();\n\t\t\tlet value = map( clientX, rect.left, rect.right, this._min, this._max );\n\t\t\tthis._snapClampSetValue( value );\n\t\t};\n\n\t\t// Mouse drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst mouseDown = e => {\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.clientX );\n\t\t\twindow.addEventListener( 'mousemove', mouseMove );\n\t\t\twindow.addEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\tconst mouseMove = e => {\n\t\t\tsetValueFromX( e.clientX );\n\t\t};\n\n\t\tconst mouseUp = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'mousemove', mouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\t// Touch drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForScroll = false, prevClientX, prevClientY;\n\n\t\tconst beginTouchDrag = e => {\n\t\t\te.preventDefault();\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\t\t\ttestingForScroll = false;\n\t\t};\n\n\t\tconst onTouchStart = e => {\n\n\t\t\tif ( e.touches.length > 1 ) return;\n\n\t\t\t// If we're in a scrollable container, we should wait for the first\n\t\t\t// touchmove to see if the user is trying to slide or scroll.\n\t\t\tif ( this._hasScrollBar ) {\n\n\t\t\t\tprevClientX = e.touches[ 0 ].clientX;\n\t\t\t\tprevClientY = e.touches[ 0 ].clientY;\n\t\t\t\ttestingForScroll = true;\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we can set the value straight away on touchstart.\n\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t}\n\n\t\t\twindow.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\t\t\twindow.addEventListener( 'touchend', onTouchEnd );\n\n\t\t};\n\n\t\tconst onTouchMove = e => {\n\n\t\t\tif ( testingForScroll ) {\n\n\t\t\t\tconst dx = e.touches[ 0 ].clientX - prevClientX;\n\t\t\t\tconst dy = e.touches[ 0 ].clientY - prevClientY;\n\n\t\t\t\tif ( Math.abs( dx ) > Math.abs( dy ) ) {\n\n\t\t\t\t\t// We moved horizontally, set the value and stop checking.\n\t\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// This was, in fact, an attempt to scroll. Abort.\n\t\t\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\te.preventDefault();\n\t\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst onTouchEnd = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\t\t};\n\n\t\t// Mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\t// We have to use a debounced function to call onFinishChange because\n\t\t// there's no way to tell when the user is \"done\" mouse-wheeling.\n\t\tconst callOnFinishChange = this._callOnFinishChange.bind( this );\n\t\tconst WHEEL_DEBOUNCE_TIME = 400;\n\t\tlet wheelFinishChangeTimeout;\n\n\t\tconst onWheel = e => {\n\n\t\t\t// ignore vertical wheels if there's a scrollbar\n\t\t\tconst isVertical = Math.abs( e.deltaX ) < Math.abs( e.deltaY );\n\t\t\tif ( isVertical && this._hasScrollBar ) return;\n\n\t\t\te.preventDefault();\n\n\t\t\t// set value\n\t\t\tconst delta = this._normalizeMouseWheel( e ) * this._step;\n\t\t\tthis._snapClampSetValue( this.getValue() + delta );\n\n\t\t\t// force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t\t// debounce onFinishChange\n\t\t\tclearTimeout( wheelFinishChangeTimeout );\n\t\t\twheelFinishChangeTimeout = setTimeout( callOnFinishChange, WHEEL_DEBOUNCE_TIME );\n\n\t\t};\n\n\t\tthis.$slider.addEventListener( 'mousedown', mouseDown );\n\t\tthis.$slider.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tthis.$slider.addEventListener( 'wheel', onWheel, { passive: false } );\n\n\t}\n\n\t_setDraggingStyle( active, axis = 'horizontal' ) {\n\t\tif ( this.$slider ) {\n\t\t\tthis.$slider.classList.toggle( 'active', active );\n\t\t}\n\t\tdocument.body.classList.toggle( 'lil-gui-dragging', active );\n\t\tdocument.body.classList.toggle( `lil-gui-${axis}`, active );\n\t}\n\n\t_getImplicitStep() {\n\n\t\tif ( this._hasMin && this._hasMax ) {\n\t\t\treturn ( this._max - this._min ) / 1000;\n\t\t}\n\n\t\treturn 0.1;\n\n\t}\n\n\t_onUpdateMinMax() {\n\n\t\tif ( !this._hasSlider && this._hasMin && this._hasMax ) {\n\n\t\t\t// If this is the first time we're hearing about min and max\n\t\t\t// and we haven't explicitly stated what our step is, let's\n\t\t\t// update that too.\n\t\t\tif ( !this._stepExplicit ) {\n\t\t\t\tthis.step( this._getImplicitStep(), false );\n\t\t\t}\n\n\t\t\tthis._initSlider();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\t_normalizeMouseWheel( e ) {\n\n\t\tlet { deltaX, deltaY } = e;\n\n\t\t// Safari and Chrome report weird non-integral values for a notched wheel,\n\t\t// but still expose actual lines scrolled via wheelDelta. Notched wheels\n\t\t// should behave the same way as arrow keys.\n\t\tif ( Math.floor( e.deltaY ) !== e.deltaY && e.wheelDelta ) {\n\t\t\tdeltaX = 0;\n\t\t\tdeltaY = -e.wheelDelta / 120;\n\t\t\tdeltaY *= this._stepExplicit ? 1 : 10;\n\t\t}\n\n\t\tconst wheel = deltaX + -deltaY;\n\n\t\treturn wheel;\n\n\t}\n\n\t_arrowKeyMultiplier( e ) {\n\n\t\tlet mult = this._stepExplicit ? 1 : 10;\n\n\t\tif ( e.shiftKey ) {\n\t\t\tmult *= 10;\n\t\t} else if ( e.altKey ) {\n\t\t\tmult /= 10;\n\t\t}\n\n\t\treturn mult;\n\n\t}\n\n\t_snap( value ) {\n\n\t\t// Make the steps \"start\" at min or max.\n\t\tlet offset = 0;\n\t\tif ( this._hasMin ) {\n\t\t\toffset = this._min;\n\t\t} else if ( this._hasMax ) {\n\t\t\toffset = this._max;\n\t\t}\n\n\t\tvalue -= offset;\n\n\t\tvalue = Math.round( value / this._step ) * this._step;\n\n\t\tvalue += offset;\n\n\t\t// Used to prevent \"flyaway\" decimals like 1.00000000000001\n\t\tvalue = parseFloat( value.toPrecision( 15 ) );\n\n\t\treturn value;\n\n\t}\n\n\t_clamp( value ) {\n\t\t// either condition is false if min or max is undefined\n\t\tif ( value < this._min ) value = this._min;\n\t\tif ( value > this._max ) value = this._max;\n\t\treturn value;\n\t}\n\n\t_snapClampSetValue( value ) {\n\t\tthis.setValue( this._clamp( this._snap( value ) ) );\n\t}\n\n\tget _hasScrollBar() {\n\t\tconst root = this.parent.root.$children;\n\t\treturn root.scrollHeight > root.clientHeight;\n\t}\n\n\tget _hasMin() {\n\t\treturn this._min !== undefined;\n\t}\n\n\tget _hasMax() {\n\t\treturn this._max !== undefined;\n\t}\n\n}\n\nclass OptionController extends Controller {\n\n\tconstructor( parent, object, property, options ) {\n\n\t\tsuper( parent, object, property, 'option' );\n\n\t\tthis.$select = document.createElement( 'select' );\n\t\tthis.$select.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$select.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this._values[ this.$select.selectedIndex ] );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'focus', () => {\n\t\t\tthis.$display.classList.add( 'focus' );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'blur', () => {\n\t\t\tthis.$display.classList.remove( 'focus' );\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$select );\n\t\tthis.$widget.appendChild( this.$display );\n\n\t\tthis.$disable = this.$select;\n\n\t\tthis.options( options );\n\n\t}\n\n\toptions( options ) {\n\n\t\tthis._values = Array.isArray( options ) ? options : Object.values( options );\n\t\tthis._names = Array.isArray( options ) ? options : Object.keys( options );\n\n\t\tthis.$select.replaceChildren();\n\n\t\tthis._names.forEach( name => {\n\t\t\tconst $option = document.createElement( 'option' );\n\t\t\t$option.textContent = name;\n\t\t\tthis.$select.appendChild( $option );\n\t\t} );\n\n\t\tthis.updateDisplay();\n\n\t\treturn this;\n\n\t}\n\n\tupdateDisplay() {\n\t\tconst value = this.getValue();\n\t\tconst index = this._values.indexOf( value );\n\t\tthis.$select.selectedIndex = index;\n\t\tthis.$display.textContent = index === -1 ? value : this._names[ index ];\n\t\treturn this;\n\t}\n\n}\n\nclass StringController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'string' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis.setValue( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nvar stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"↕\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  width: 100%;\n  text-align: left;\n  background: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"▾\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"▸\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"✓\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  border: none;\n}\n.lil-gui .controller button {\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n}\n@media (hover: hover) {\n  .lil-gui .controller button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui .controller button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui .controller button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\n\nfunction _injectStyles( cssContent ) {\n\tconst injected = document.createElement( 'style' );\n\tinjected.innerHTML = cssContent;\n\tconst before = document.querySelector( 'head link[rel=stylesheet], head style' );\n\tif ( before ) {\n\t\tdocument.head.insertBefore( injected, before );\n\t} else {\n\t\tdocument.head.appendChild( injected );\n\t}\n}\n\n\nlet stylesInjected = false;\n\nclass GUI {\n\n\t/**\n\t * Creates a panel that holds controllers.\n\t * @example\n\t * new GUI();\n\t * new GUI( { container: document.getElementById( 'custom' ) } );\n\t *\n\t * @param {object} [options]\n\t * @param {boolean} [options.autoPlace=true]\n\t * Adds the GUI to `document.body` and fixes it to the top right of the page.\n\t *\n\t * @param {HTMLElement} [options.container]\n\t * Adds the GUI to this DOM element. Overrides `autoPlace`.\n\t *\n\t * @param {number} [options.width=245]\n\t * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n\t * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`.\n\t *\n\t * @param {string} [options.title=Controls]\n\t * Name to display in the title bar.\n\t *\n\t * @param {boolean} [options.closeFolders=false]\n\t * Pass `true` to close all folders in this GUI by default.\n\t *\n\t * @param {boolean} [options.injectStyles=true]\n\t * Injects the default stylesheet into the page if this is the first GUI.\n\t * Pass `false` to use your own stylesheet.\n\t *\n\t * @param {number} [options.touchStyles=true]\n\t * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n\t *\n\t * @param {GUI} [options.parent]\n\t * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n\t */\n\tconstructor( {\n\t\tparent,\n\t\tautoPlace = parent === undefined,\n\t\tcontainer,\n\t\twidth,\n\t\ttitle = 'Controls',\n\t\tcloseFolders = false,\n\t\tinjectStyles = true,\n\t\ttouchStyles = true\n\t} = {} ) {\n\n\t\t/**\n\t\t * The GUI containing this folder, or `undefined` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The top level GUI containing this folder, or `this` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.root = parent ? parent.root : this;\n\n\t\t/**\n\t\t * The list of controllers and folders contained by this GUI.\n\t\t * @type {Array<GUI|Controller>}\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * The list of controllers contained by this GUI.\n\t\t * @type {Array<Controller>}\n\t\t */\n\t\tthis.controllers = [];\n\n\t\t/**\n\t\t * The list of folders contained by this GUI.\n\t\t * @type {Array<GUI>}\n\t\t */\n\t\tthis.folders = [];\n\n\t\t/**\n\t\t * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._closed = false;\n\n\t\t/**\n\t\t * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The outermost container element.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'lil-gui' );\n\n\t\t/**\n\t\t * The DOM element that contains the title.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$title = document.createElement( 'button' );\n\t\tthis.$title.classList.add( 'title' );\n\t\tthis.$title.setAttribute( 'aria-expanded', true );\n\n\t\tthis.$title.addEventListener( 'click', () => this.openAnimated( this._closed ) );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$title.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\t/**\n\t\t * The DOM element that contains children.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$children = document.createElement( 'div' );\n\t\tthis.$children.classList.add( 'children' );\n\n\t\tthis.domElement.appendChild( this.$title );\n\t\tthis.domElement.appendChild( this.$children );\n\n\t\tthis.title( title );\n\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.children.push( this );\n\t\t\tthis.parent.folders.push( this );\n\n\t\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\t\t// Stop the constructor early, everything onward only applies to root GUI's\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.domElement.classList.add( 'root' );\n\n\t\tif ( touchStyles ) {\n\t\t\tthis.domElement.classList.add( 'allow-touch-styles' );\n\t\t}\n\n\t\t// Inject stylesheet if we haven't done that yet\n\t\tif ( !stylesInjected && injectStyles ) {\n\t\t\t_injectStyles( stylesheet );\n\t\t\tstylesInjected = true;\n\t\t}\n\n\t\tif ( container ) {\n\n\t\t\tcontainer.appendChild( this.domElement );\n\n\t\t} else if ( autoPlace ) {\n\n\t\t\tthis.domElement.classList.add( 'autoPlace' );\n\t\t\tdocument.body.appendChild( this.domElement );\n\n\t\t}\n\n\t\tif ( width ) {\n\t\t\tthis.domElement.style.setProperty( '--width', width + 'px' );\n\t\t}\n\n\t\tthis._closeFolders = closeFolders;\n\n\t}\n\n\t/**\n\t * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n\t * @example\n\t * gui.add( object, 'property' );\n\t * gui.add( object, 'number', 0, 100, 1 );\n\t * gui.add( object, 'options', [ 1, 2, 3 ] );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n\t * selectable values for a dropdown.\n\t * @param {number} [max] Maximum value for number controllers.\n\t * @param {number} [step] Step value for number controllers.\n\t * @returns {Controller}\n\t */\n\tadd( object, property, $1, max, step ) {\n\n\t\tif ( Object( $1 ) === $1 ) {\n\n\t\t\treturn new OptionController( this, object, property, $1 );\n\n\t\t}\n\n\t\tconst initialValue = object[ property ];\n\n\t\tswitch ( typeof initialValue ) {\n\n\t\t\tcase 'number':\n\n\t\t\t\treturn new NumberController( this, object, property, $1, max, step );\n\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn new BooleanController( this, object, property );\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn new StringController( this, object, property );\n\n\t\t\tcase 'function':\n\n\t\t\t\treturn new FunctionController( this, object, property );\n\n\t\t}\n\n\t\tconsole.error( `gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue );\n\n\t}\n\n\t/**\n\t * Adds a color controller to the GUI.\n\t * @example\n\t * params = {\n\t * \tcssColor: '#ff00ff',\n\t * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n\t * \tcustomRange: [ 0, 127, 255 ],\n\t * };\n\t *\n\t * gui.addColor( params, 'cssColor' );\n\t * gui.addColor( params, 'rgbColor' );\n\t * gui.addColor( params, 'customRange', 255 );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n\t * need to set this to 255 if your colors are too bright.\n\t * @returns {Controller}\n\t */\n\taddColor( object, property, rgbScale = 1 ) {\n\t\treturn new ColorController( this, object, property, rgbScale );\n\t}\n\n\t/**\n\t * Adds a folder to the GUI, which is just another GUI. This method returns\n\t * the nested GUI so you can add controllers to it.\n\t * @example\n\t * const folder = gui.addFolder( 'Position' );\n\t * folder.add( position, 'x' );\n\t * folder.add( position, 'y' );\n\t * folder.add( position, 'z' );\n\t *\n\t * @param {string} title Name to display in the folder's title bar.\n\t * @returns {GUI}\n\t */\n\taddFolder( title ) {\n\t\tconst folder = new GUI( { parent: this, title } );\n\t\tif ( this.root._closeFolders ) folder.close();\n\t\treturn folder;\n\t}\n\n\t/**\n\t * Recalls values that were saved with `gui.save()`.\n\t * @param {object} obj\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\tload( obj, recursive = true ) {\n\n\t\tif ( obj.controllers ) {\n\n\t\t\tthis.controllers.forEach( c => {\n\n\t\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\t\tc.load( obj.controllers[ c._name ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( recursive && obj.folders ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tf.load( obj.folders[ f._title ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n\t * recall these values.\n\t * @example\n\t * {\n\t * \tcontrollers: {\n\t * \t\tprop1: 1,\n\t * \t\tprop2: 'value',\n\t * \t\t...\n\t * \t},\n\t * \tfolders: {\n\t * \t\tfolderName1: { controllers, folders },\n\t * \t\tfolderName2: { controllers, folders }\n\t * \t\t...\n\t * \t}\n\t * }\n\t *\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {object}\n\t */\n\tsave( recursive = true ) {\n\n\t\tconst obj = {\n\t\t\tcontrollers: {},\n\t\t\tfolders: {}\n\t\t};\n\n\t\tthis.controllers.forEach( c => {\n\n\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\tthrow new Error( `Cannot save GUI with duplicate property \"${c._name}\"` );\n\t\t\t}\n\n\t\t\tobj.controllers[ c._name ] = c.save();\n\n\t\t} );\n\n\t\tif ( recursive ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tthrow new Error( `Cannot save GUI with duplicate folder \"${f._title}\"` );\n\t\t\t\t}\n\n\t\t\t\tobj.folders[ f._title ] = f.save();\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn obj;\n\n\t}\n\n\t/**\n\t * Opens a GUI or folder. GUI and folders are open by default.\n\t * @param {boolean} open Pass false to close.\n\t * @returns {this}\n\t * @example\n\t * gui.open(); // open\n\t * gui.open( false ); // close\n\t * gui.open( gui._closed ); // toggle\n\t */\n\topen( open = true ) {\n\n\t\tthis._setClosed( !open );\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\t\tthis.domElement.classList.toggle( 'closed', this._closed );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Closes the GUI.\n\t * @returns {this}\n\t */\n\tclose() {\n\t\treturn this.open( false );\n\t}\n\n\t_setClosed( closed ) {\n\t\tif ( this._closed === closed ) return;\n\t\tthis._closed = closed;\n\t\tthis._callOnOpenClose( this );\n\t}\n\n\t/**\n\t * Shows the GUI after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * gui.show();\n\t * gui.show( false ); // hide\n\t * gui.show( gui._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the GUI.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\topenAnimated( open = true ) {\n\n\t\t// set state immediately\n\t\tthis._setClosed( !open );\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\n\t\t// wait for next frame to measure $children\n\t\trequestAnimationFrame( () => {\n\n\t\t\t// explicitly set initial height for transition\n\t\t\tconst initialHeight = this.$children.clientHeight;\n\t\t\tthis.$children.style.height = initialHeight + 'px';\n\n\t\t\tthis.domElement.classList.add( 'transition' );\n\n\t\t\tconst onTransitionEnd = e => {\n\t\t\t\tif ( e.target !== this.$children ) return;\n\t\t\t\tthis.$children.style.height = '';\n\t\t\t\tthis.domElement.classList.remove( 'transition' );\n\t\t\t\tthis.$children.removeEventListener( 'transitionend', onTransitionEnd );\n\t\t\t};\n\n\t\t\tthis.$children.addEventListener( 'transitionend', onTransitionEnd );\n\n\t\t\t// todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n\t\t\tconst targetHeight = !open ? 0 : this.$children.scrollHeight;\n\n\t\t\tthis.domElement.classList.toggle( 'closed', !open );\n\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tthis.$children.style.height = targetHeight + 'px';\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Change the title of this GUI.\n\t * @param {string} title\n\t * @returns {this}\n\t */\n\ttitle( title ) {\n\t\t/**\n\t\t * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._title = title;\n\t\tthis.$title.textContent = title;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets all controllers to their initial values.\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\treset( recursive = true ) {\n\t\tconst controllers = recursive ? this.controllersRecursive() : this.controllers;\n\t\tcontrollers.forEach( c => c.reset() );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI changes.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnChange( controller );\n\t\t}\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI has finished changing.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onFinishChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnFinishChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnFinishChange( controller );\n\t\t}\n\n\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\tthis._onFinishChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called when this GUI or its descendants are opened or closed.\n\t * @param {function(GUI)} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onOpenClose( changedGUI => {\n\t * \tconsole.log( changedGUI._closed );\n\t * } );\n\t */\n\tonOpenClose( callback ) {\n\t\tthis._onOpenClose = callback;\n\t\treturn this;\n\t}\n\n\t_callOnOpenClose( changedGUI ) {\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnOpenClose( changedGUI );\n\t\t}\n\n\t\tif ( this._onOpenClose !== undefined ) {\n\t\t\tthis._onOpenClose.call( this, changedGUI );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all DOM elements and event listeners associated with this GUI.\n\t */\n\tdestroy() {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\t\tthis.parent.folders.splice( this.parent.folders.indexOf( this ), 1 );\n\t\t}\n\n\t\tif ( this.domElement.parentElement ) {\n\t\t\tthis.domElement.parentElement.removeChild( this.domElement );\n\t\t}\n\n\t\tArray.from( this.children ).forEach( c => c.destroy() );\n\n\t}\n\n\t/**\n\t * Returns an array of controllers contained by this GUI and its descendents.\n\t * @returns {Controller[]}\n\t */\n\tcontrollersRecursive() {\n\t\tlet controllers = Array.from( this.controllers );\n\t\tthis.folders.forEach( f => {\n\t\t\tcontrollers = controllers.concat( f.controllersRecursive() );\n\t\t} );\n\t\treturn controllers;\n\t}\n\n\t/**\n\t * Returns an array of folders contained by this GUI and its descendents.\n\t * @returns {GUI[]}\n\t */\n\tfoldersRecursive() {\n\t\tlet folders = Array.from( this.folders );\n\t\tthis.folders.forEach( f => {\n\t\t\tfolders = folders.concat( f.foldersRecursive() );\n\t\t} );\n\t\treturn folders;\n\t}\n\n}\n\nexport { BooleanController, ColorController, Controller, FunctionController, GUI, NumberController, OptionController, StringController, GUI as default };\n"],"names":["shader","f","a","$17ea8e9e22e211a7$var$stats","$17ea8e9e22e211a7$var$camera","$17ea8e9e22e211a7$var$renderer","$17ea8e9e22e211a7$var$geo","$17ea8e9e22e211a7$var$displayScene","$17ea8e9e22e211a7$var$displayMaterial","$17ea8e9e22e211a7$var$displayMesh","$17ea8e9e22e211a7$var$bufferScene","$17ea8e9e22e211a7$var$bufferMesh","$17ea8e9e22e211a7$var$rt1","$17ea8e9e22e211a7$var$rt2","$17ea8e9e22e211a7$var$currentRT","$17ea8e9e22e211a7$var$nextRT","$17ea8e9e22e211a7$var$boundaryTexture","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$ilwiq","$8d6448069697305c$exports","e","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","$6e44765c12ddb126$export$bd0bf19f25da8474","constructor","parent","object","property","className","elementType","_disabled","_hidden","initialValue","getValue","classList","add","$name","nextNameID","$widget","$disable","stopPropagation","push","controllers","$children","_listenCallback","bind","name","_name","textContent","onChange","callback","_onChange","_callOnChange","undefined","_changed","onFinishChange","_onFinishChange","_callOnFinishChange","reset","setValue","enable","enabled","disable","disabled","toggle","toggleAttribute","show","hide","options","controller","destroy","step","decimals","listen","_listening","_listenCallbackID","cancelAnimationFrame","requestAnimationFrame","curValue","save","_listenPrevValue","updateDisplay","value","load","splice","indexOf","removeChild","$6e44765c12ddb126$export$c6f57966aed3cc84","$input","setAttribute","checked","$6e44765c12ddb126$var$normalizeColorString","string","match","result","parseInt","toString","padStart","$6e44765c12ddb126$var$INT","isPrimitive","fromHexString","substring","toHexString","$6e44765c12ddb126$var$FORMATS","Array","isArray","target","rgbScale","int","Object","$6e44765c12ddb126$export$3a401c49038ca28a","$text","$display","_format","find","format","_rgbScale","_initialValueHexString","_textFocused","_setValueFromHexString","tryParse","select","newValue","backgroundColor","$6e44765c12ddb126$export$2d7dcf9d07c8b352","$button","passive","$6e44765c12ddb126$export$ee52b68072d314b9","_initInput","stepExplicit","_getImplicitStep","_decimals","_min","_onUpdateMinMax","_max","explicit","_step","_stepExplicit","_hasSlider","percent","$fill","_inputFocused","toFixed","matchMedia","matches","increment","delta","parseFloat","isNaN","_snapClampSetValue","testingForVerticalDrag","initClientX","initClientY","prevClientY","initValue","dragDelta","onMouseMove","dx","clientX","abs","clientY","blur","_setDraggingStyle","onMouseUp","dy","_arrowKeyMultiplier","removeEventListener","_snap","_clamp","key","_normalizeMouseWheel","_initSlider","wheelFinishChangeTimeout","$slider","insertBefore","map","setValueFromX","rect","getBoundingClientRect","left","right","mouseMove","mouseUp","testingForScroll","prevClientX","beginTouchDrag","touches","onTouchMove","onTouchEnd","callOnFinishChange","_hasScrollBar","isVertical","deltaX","deltaY","clearTimeout","setTimeout","active","axis","body","_hasMin","_hasMax","floor","wheelDelta","mult","shiftKey","altKey","offset","toPrecision","root","scrollHeight","clientHeight","$6e44765c12ddb126$export$25f00c724c27c8b4","$select","_values","selectedIndex","remove","values","_names","keys","replaceChildren","forEach","$option","index","$6e44765c12ddb126$export$786d0ebe8f71368e","$6e44765c12ddb126$var$stylesheet","$6e44765c12ddb126$var$stylesInjected","$6e44765c12ddb126$export$983832d820c96993","autoPlace","container","title","closeFolders","injectStyles","touchStyles","folders","_closed","$title","openAnimated","$6e44765c12ddb126$var$_injectStyles","cssContent","injected","innerHTML","before","querySelector","head","setProperty","_closeFolders","$1","console","error","addColor","addFolder","folder","close","obj","recursive","_title","open","_setClosed","closed","_callOnOpenClose","initialHeight","onTransitionEnd","targetHeight","controllersRecursive","onOpenClose","_onOpenClose","changedGUI","parentElement","from","concat","foldersRecursive","__esModule","default","position","top","$17ea8e9e22e211a7$var$params","isSimRunning","isSingleStep","$17ea8e9e22e211a7$var$gui","$17ea8e9e22e211a7$var$setupScene","WebGLRenderer","canvas","getElementById","size","innerWidth","innerHeight","setSize","setClearColor","OrthographicCamera","z","PlaneGeometry","Scene","MeshBasicMaterial","Mesh","WebGLRenderTarget","RGBAFormat","type","FloatType","magFilter","LinearFilter","minFilter","texture","$17ea8e9e22e211a7$var$createInitialTexture","data","Float32Array","i","random","boundaryData","boundaryTexture","$17ea8e9e22e211a7$var$createBoundaryMask","y","x","DataTexture","needsUpdate","image","r1","g1","b1","a1","r2","g2","b2","a2","combined","set","$17ea8e9e22e211a7$var$shadersDict","$17ea8e9e22e211a7$var$simulateSingleShader","material","uniforms","uTexture","setRenderTarget","render","$17ea8e9e22e211a7$var$setupShaders","shaderMultiply","ShaderMaterial","fragmentShader","shaderInvert","boundaryShader","uBoundary","vertexShader","collisionShader","uTau","streamingShader","visualizationShader","$17ea8e9e22e211a7$var$render"],"version":3,"file":"sim.a0b4edd0.js.map"}